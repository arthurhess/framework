ITEMS = [
  "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "Nunc in tellus quis nisl dictum ultrices vel quis quam.",
  "Nullam mollis neque vitae bibendum pellentesque.",
  "Proin a ante at enim bibendum blandit.",
  "Nulla porttitor dui vel leo iaculis, id aliquet mauris lobortis.",
  "Aliquam placerat purus aliquam nisl tristique efficitur.",
  "Etiam id dui quis leo vulputate scelerisque.",
  "Sed porttitor lacus non egestas lacinia.",
  "Morbi in justo vel ex feugiat malesuada.",
]

MIN = 0.1
MAX = 1.0

Table = import("./Table")

initial_state do |props|
  {
    time: nil,
    playing: true,
    speed: 1.0,
    index: 0,
    cols: 10,
    rows: 10,
  }
end

mount do
  async do |task|
    loop do
      update do |state|
        {
          time: Time.now.strftime('%H:%M:%S.%3N'),
          index: state[:index].succ % ITEMS.size
        }
      end if state[:playing]

      sleep state[:speed]
    end
  ensure
    puts "UNMOUNTING"
  end
end

handler(:toggle) do |event|
  update do |state|
    { playing: !state[:playing] }
  end
end

handler(:set_speed) do |event|
  update do |state|
    { speed: [[event["value"].to_f, MIN].max, MAX].min }
  end
end

handler(:set_cols) do |event|
  update do |state|
    { cols: event["value"].to_i }
  end
end

handler(:set_rows) do |event|
  update do |state|
    { rows: event["value"].to_i }
  end
end

render do
  <div>
    <h4>async {state[:time]}</h4>
    <p>{ITEMS[state[:index]]}</p>
    <button on-click={handler(:toggle)}>{state[:playing] ? "Stop" : "Play"}</button>
    <input
      type="range"
      on-change={handler(:set_speed)}
      value={state[:speed]}
      min={MIN}
      max={MAX}
      step="0.05"
    />
    <output>{state[:speed]}</output>
  </div>
end
