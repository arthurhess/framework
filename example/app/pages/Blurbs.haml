:ruby
  Link = import("/app/components/UI/Link")
  Section = import("./Section")
  Blurb = import("./Blurb")

:css
  @keyframes wand-color {
    0% { --wand-color: #16213e; }
    25% { --wand-color: #0f3460; }
    50% { --wand-color: #533483; }
    75% { --wand-color: #E94560; }
    100% { --wand-color: #16213e; }
  }

  Section {
    animation-duration: 20s;
    animation-name: wand-color;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
  }

  .blurbs {
    list-style-type: none;
    margin: 0;
    border: 0;
    padding: 0em;
    display: grid;
    gap: 2em;
  }

  @media (min-width: 768px) {
    .blurbs {
      grid-template-columns: 1fr 1fr;
    }
  }

  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
  }

  li {
    margin: 1em 0;
    padding: 0;
  }

  a:link, a:visited {
    color: var(--blue);
  }

  a:active, a:hover {
    filter: brightness(120%);
  }

%Section
  .blurbs
    %Blurb(icon="fire" title="Interactive web apps without JavaScript")
      %ul
        %li
          You write all code in Ruby.
        %li
          All code runs on the server.
        %li
          All HTML is rendered on the server.
        %li
          DOM-patches are streamed to the browser.
    %Blurb(icon="wand-magic-sparkles" title="How does it work?" color="var(--wand-color)")
      %ul.blurb-list
        %li
          Mayu implements a
          %Link(href="https://en.wikipedia.org/wiki/Virtual_DOM" target="_blank")<>
            Virtual DOM
          in Ruby.
        %li
          All DOM updates are streamed to a small browser runtime
          that takes care of patching the DOM.
        %li
          Event handlers run on the server.
    %Blurb(icon="rocket" title="Efficient")
      %ul.blurb-list
        %li
          HTTP/2 Streams with
          %Link(href="https://developer.mozilla.org/en-US/docs/Web/API/Compression_Streams_API" target="_blank")<>
            compression
          and
          %Link(href="https://msgpack.org/index.html" target="_blank")<
            MessagePack
          \.
        %li
          Designed to be deployed on the edge.
        %li
          Pages are interactive immediately when loaded.
        %li
          %Link(href="https://prometheus.io/" target="_blank") Prometheus
          \-endpoint for real-time metrics.
    %Blurb(icon="code" title="Developer friendly")
      %ul.blurb-list
        %li
          Hot reloading updates the page as soon as you save.
        %li
          Asynchronous code without async/await or promises.
        %li
          %Link(href="https://ruby-lang.org/" target="_blank")> Ruby
          is pretty comfortable to work with.
        %li
          %Link(href="https://github.com/mayu-live/framework/blob/main/lib/mayu/vdom.test.rb" target="_blank")<
            Integration test example
