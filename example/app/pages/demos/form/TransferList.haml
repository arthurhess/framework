:ruby
  Fieldset = import("/app/components/Form/Fieldset")
  Button = import("/app/components/Form/Button")
  Input = import("/app/components/Form/Input")
  Select = import("/app/components/Form/Select")
  Checkbox = import("/app/components/Form/Checkbox")

  ITEMS = %w[ dream friendly chief potato irritate creature pastoral selective lyrical fire seal righteous ]

  def self.get_initial_state(**)
    {
      left: ITEMS.size.times.to_a,
      right: [],
    }
  end

  def get_selected(form_data, prefix)
    form_data
      .select { |k, v| k.to_s.start_with?(prefix) && v == "on" }
      .keys
      .map { _1.to_s.split("-").last.to_i }
  end

  def handle_submit(e)
    update do |state|
      case e
      in { submitter: { name: "action", value: "move_all_left" } }
        { left: state[:left] + state[:right], right: [] }
      in { submitter: { name: "action", value: "move_all_right" } }
        { left: [], right: state[:right] + state[:left] }
      in { submitter: { name: "action", value: "move_selected_left" }, target: { formData: } }
        selected = get_selected(formData, "right-")

        {
          left: state[:left].union(selected),
          right: state[:right].difference(selected),
        }
      in { submitter: { name: "action", value: "move_selected_right" }, target: { formData: } }
        selected = get_selected(formData, "left-")

        {
          left: state[:left].difference(selected),
          right: state[:right].union(selected),
        }
      else
        {}
      end
    end
  end

%Fieldset
  %legend Transfer list
  %form.container{on_submit: handler(:handle_submit)}
    %ul.list
      = state[:left].map do |item|
        %li.item(key=item)
          %Checkbox{
            label: ITEMS[item],
            name: "left-#{item}",
            group_class: styles[:group],
          }

    .buttons
      %button.button(type="submit" name="action" value="move_all_left" title="Move all left") ⟪
      %button.button(type="submit" name="action" value="move_selected_left" title="Move selected left") ⟨
      %button.button(type="submit" name="action" value="move_all_right" title="Move all right") ⟫
      %button.button(type="submit" name="action" value="move_selected_right" title="Move selected right") ⟩

    %ul.list
      = state[:right].map do |item|
        %li.item(key=item)
          %Checkbox{
            label: ITEMS[item],
            name: "right-#{item}",
            group_class: styles[:group],
          }
