:ruby
  def self.get_initial_state(initial_open: false, **) = {
    open: initial_open
  }

  def handle_toggle(_)
    update do |state|
      { open: !state[:open] }
    end
  end

:css
  .dir {
    padding-left: 0.5em;
    margin-left: 1em;
    list-style-type: "📁";
  }

  .open {
    list-style-type: "📂";
  }

  .name {
    font-weight: bold;
    cursor: pointer;
  }

  .name:hover {
    text-decoration: underline;
  }

  .list {
    margin: 0;
    padding: 0;
  }

:ruby
  props => { root:, path:, entry: }

  entries =
    if state[:open]
      Dir
        .entries(File.join(root, path))
        .difference(%w[. ..])
        .sort
        .map do
          Mayu::VDOM.h(entry,
          root:,
          path: File.join(path, _1)
        )
        end.compact
      else
        []
      end

%li.dir{class: { nonempty: entries.any?, open: state[:open] }}
  %span{class: styles[:name], on_click: handler(:handle_toggle)}
    #{File.basename(path)}/
  = unless entries.empty?
    %ul.list= entries
