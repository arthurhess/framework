initial_state do |props|
  { count: 0, length: 5 }
end

should_update? do |next_props, next_state|
  true
end

handler :rerender do |event|
  update do |state|
    { count: state[:count] + 1 }
  end
end

handler :update_length do |event|
  update do |state|
    { length: event["value"].to_i }
  end
end

render do
  numbers = state[:length].times.to_a.shuffle

  items = numbers.map do |i|
    <li key={i} style={"background-color: hsl(#{i * 36.0}, 80%, 80%);"}>{i.to_s}</li>
  end

  <div>
    <h1>Random numbers</h1>
    <button on-click={handler(:rerender)}>
      Rerender
    </button>
    <p>numbers: {numbers.inspect}</p>
    <input
      type="range"
      min="1"
      max="20"
      value={state[:value]}
      on-input={handler(:update_length)}
    />
    <ul>{items}</ul>
  </div>
end
