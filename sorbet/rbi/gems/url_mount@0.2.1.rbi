# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `url_mount` gem.
# Please instead update this file by running `bin/tapioca gem url_mount`.

class UrlMount
  # @return [UrlMount] a new instance of UrlMount
  def initialize(path, opts = T.unsafe(nil), &blk); end

  def callback(&blk); end

  # Returns the value of attribute options.
  def defaults; end

  # Sets the attribute options
  #
  # @param value the value to set the attribute options to.
  def defaults=(_arg0); end

  # Returns the value of attribute host.
  def host; end

  # Sets the attribute host
  #
  # @param value the value to set the attribute host to.
  def host=(_arg0); end

  def local_segments; end
  def optional_variable_segments; end
  def optional_variables; end

  # Returns the value of attribute options.
  def options; end

  # Sets the attribute options
  #
  # @param value the value to set the attribute options to.
  def options=(_arg0); end

  # Returns the value of attribute raw_path.
  def raw_path; end

  # Sets the attribute raw_path
  #
  # @param value the value to set the attribute raw_path to.
  def raw_path=(_arg0); end

  def required_variable_segments; end
  def required_variables; end

  # Returns the value of attribute scheme.
  def scheme; end

  # Sets the attribute scheme
  #
  # @param value the value to set the attribute scheme to.
  def scheme=(_arg0); end

  def to_s(env = T.unsafe(nil), opts = T.unsafe(nil)); end
  def url(env = T.unsafe(nil), opts = T.unsafe(nil)); end

  # Returns the value of attribute url_mount.
  def url_mount; end

  # Sets the attribute url_mount
  #
  # @param value the value to set the attribute url_mount to.
  def url_mount=(_arg0); end

  def variables; end

  private

  def local_required_variables; end
  def parse_local_segments; end

  # @return [Boolean]
  def required_to_generate?; end
end

# Inspiration for this is taken straight from Usher.  http://github.com/joshbuddy/usher
UrlMount::DELIMETERS = T.let(T.unsafe(nil), Array)

class UrlMount::Segment; end

class UrlMount::Segment::Base
  # Returns the value of attribute name.
  def name; end

  # Sets the attribute name
  #
  # @param value the value to set the attribute name to.
  def name=(_arg0); end

  def optional_variable_segments; end
  def required_variable_segments; end
end

class UrlMount::Segment::Conditional < ::UrlMount::Segment::Base
  # @return [Conditional] a new instance of Conditional
  def initialize(*args); end

  def optional_variable_segments; end
  def optional_variables; end
  def required_variables; end
  def to_s(opts = T.unsafe(nil)); end
end

class UrlMount::Segment::Conditional::UnrequiredUrlMount < ::UrlMount
  private

  # @return [Boolean]
  def required_to_generate?; end
end

class UrlMount::Segment::Delimeter < ::UrlMount::Segment::Base
  def to_s(opts = T.unsafe(nil)); end
end

class UrlMount::Segment::Static < ::UrlMount::Segment::Base
  # @return [Static] a new instance of Static
  def initialize(name); end

  def to_s(opts = T.unsafe(nil)); end
end

class UrlMount::Segment::Variable < ::UrlMount::Segment::Base
  # @return [Variable] a new instance of Variable
  def initialize(name, options); end

  def required_variable_segments; end
  def to_s(opts = T.unsafe(nil)); end
end

class UrlMount::Ungeneratable < ::StandardError; end
