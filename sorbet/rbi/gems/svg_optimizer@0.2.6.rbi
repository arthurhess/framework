# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `svg_optimizer` gem.
# Please instead update this file by running `bin/tapioca gem svg_optimizer`.

# source://svg_optimizer//lib/svg_optimizer/version.rb#3
module SvgOptimizer
  class << self
    # source://svg_optimizer//lib/svg_optimizer.rb#40
    def optimize(contents, plugins = T.unsafe(nil)); end

    # source://svg_optimizer//lib/svg_optimizer.rb#50
    def optimize_file(path, target = T.unsafe(nil), plugins = T.unsafe(nil)); end
  end
end

# source://svg_optimizer//lib/svg_optimizer.rb#23
SvgOptimizer::DEFAULT_PLUGINS = T.let(T.unsafe(nil), Array)

# source://svg_optimizer//lib/svg_optimizer/plugins/base.rb#4
module SvgOptimizer::Plugins; end

# source://svg_optimizer//lib/svg_optimizer/plugins/base.rb#5
class SvgOptimizer::Plugins::Base
  # @return [Base] a new instance of Base
  #
  # source://svg_optimizer//lib/svg_optimizer/plugins/base.rb#8
  def initialize(xml); end

  # Returns the value of attribute xml.
  #
  # source://svg_optimizer//lib/svg_optimizer/plugins/base.rb#6
  def xml; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_attribute.rb#5
class SvgOptimizer::Plugins::CleanupAttribute < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_attribute.rb#14
  def cleanup_attribute(attribute); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_attribute.rb#6
  def process; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#5
class SvgOptimizer::Plugins::CleanupId < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#30
  def cleanup_id(node); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#14
  def ids; end

  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#18
  def process; end

  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#46
  def remove_unused_id(node, has_url_refs, has_href_refs); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#69
  def replace_href_references(old_id, new_id); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#53
  def replace_url_references(old_id, new_id); end

  # @return [Boolean]
  #
  # source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#65
  def xlink_namespace?; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#11
SvgOptimizer::Plugins::CleanupId::IDS = T.let(T.unsafe(nil), Array)

# source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#6
SvgOptimizer::Plugins::CleanupId::LETTERS = T.let(T.unsafe(nil), Array)

# source://svg_optimizer//lib/svg_optimizer/plugins/cleanup_id.rb#12
SvgOptimizer::Plugins::CleanupId::XLINK_NAMESPACE = T.let(T.unsafe(nil), String)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_comment.rb#5
class SvgOptimizer::Plugins::RemoveComment < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_comment.rb#6
  def process; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_description.rb#5
class SvgOptimizer::Plugins::RemoveDescription < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_description.rb#6
  def process; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_editor_namespace.rb#5
class SvgOptimizer::Plugins::RemoveEditorNamespace < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_editor_namespace.rb#22
  def process; end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_editor_namespace.rb#50
  def remove_matching_attribute(node, name); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_editor_namespace.rb#45
  def remove_namespace(namespace); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_editor_namespace.rb#35
  def remove_namespaced_attributes(name, href); end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_editor_namespace.rb#6
SvgOptimizer::Plugins::RemoveEditorNamespace::NAMESPACES = T.let(T.unsafe(nil), Array)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_attribute.rb#5
class SvgOptimizer::Plugins::RemoveEmptyAttribute < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_attribute.rb#6
  def process; end

  private

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_attribute.rb#14
  def remove_if_empty(node, attr); end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_container.rb#5
class SvgOptimizer::Plugins::RemoveEmptyContainer < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_container.rb#19
  def process; end

  private

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_container.rb#25
  def remove_node(node); end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_container.rb#6
SvgOptimizer::Plugins::RemoveEmptyContainer::ELEMENTS = T.let(T.unsafe(nil), Array)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_container.rb#17
SvgOptimizer::Plugins::RemoveEmptyContainer::SELECTOR = T.let(T.unsafe(nil), String)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_text_node.rb#5
class SvgOptimizer::Plugins::RemoveEmptyTextNode < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_text_node.rb#6
  def process; end

  private

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_empty_text_node.rb#10
  def remove_if_empty(node); end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_hidden_element.rb#5
class SvgOptimizer::Plugins::RemoveHiddenElement < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_hidden_element.rb#26
  def process; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_hidden_element.rb#6
SvgOptimizer::Plugins::RemoveHiddenElement::SELECTOR = T.let(T.unsafe(nil), String)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_metadata.rb#5
class SvgOptimizer::Plugins::RemoveMetadata < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_metadata.rb#6
  def process; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_raster_image.rb#5
class SvgOptimizer::Plugins::RemoveRasterImage < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_raster_image.rb#13
  def process; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_raster_image.rb#6
SvgOptimizer::Plugins::RemoveRasterImage::SELECTOR = T.let(T.unsafe(nil), String)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_title.rb#5
class SvgOptimizer::Plugins::RemoveTitle < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_title.rb#6
  def process; end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_unused_namespace.rb#5
class SvgOptimizer::Plugins::RemoveUnusedNamespace < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_unused_namespace.rb#6
  def process; end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_unused_namespace.rb#14
  def remove_unused_ns(ns); end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#5
class SvgOptimizer::Plugins::RemoveUselessStrokeAndFill < ::SvgOptimizer::Plugins::Base
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#15
  def process; end

  private

  # @return [Boolean]
  #
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#44
  def decline_inherited_fill?(node); end

  # @return [Boolean]
  #
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#40
  def decline_inherited_stroke?(node); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#64
  def inherited_attribute(node, attr); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#35
  def remove_fill(node); end

  # @return [Boolean]
  #
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#55
  def remove_fill?(node); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#30
  def remove_stroke(node); end

  # @return [Boolean]
  #
  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#48
  def remove_stroke?(node); end

  # source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#23
  def remove_useless_attributes(node); end
end

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#13
SvgOptimizer::Plugins::RemoveUselessStrokeAndFill::FILL_ATTRS = T.let(T.unsafe(nil), Array)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#6
SvgOptimizer::Plugins::RemoveUselessStrokeAndFill::SELECTOR = T.let(T.unsafe(nil), String)

# source://svg_optimizer//lib/svg_optimizer/plugins/remove_useless_stroke_and_fill.rb#7
SvgOptimizer::Plugins::RemoveUselessStrokeAndFill::STROKE_ATTRS = T.let(T.unsafe(nil), Array)

# source://svg_optimizer//lib/svg_optimizer/version.rb#4
SvgOptimizer::VERSION = T.let(T.unsafe(nil), String)
