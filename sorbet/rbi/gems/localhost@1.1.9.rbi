# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `localhost` gem.
# Please instead update this file by running `bin/tapioca gem localhost`.

module Localhost; end

# Represents a single public/private key pair for a given hostname.
class Localhost::Authority
  # Create an authority forn the given hostname.
  #
  # @return [Authority] a new instance of Authority
  def initialize(hostname = T.unsafe(nil), root: T.unsafe(nil)); end

  # The public certificate.
  def certificate; end

  # The public certificate path.
  def certificate_path; end

  def client_context(*args); end
  def dh_key; end
  def ecdh_key; end

  # The hostname of the certificate authority.
  def hostname; end

  # The private key.
  def key; end

  def key=(key); end

  # The private key path.
  def key_path; end

  def load(path = T.unsafe(nil)); end

  # The certificate name.
  def name; end

  def name=(name); end
  def save(path = T.unsafe(nil)); end
  def server_context(*arguments); end

  # The certificate store which is used for validating the server certificate.
  def store; end

  class << self
    # Fetch (load or create) a certificate with the given hostname.
    # See {#initialize} for the format of the arguments.
    def fetch(*arguments, **options); end

    # List all certificate authorities in the given directory:
    def list(root = T.unsafe(nil)); end

    def path; end
  end
end

Localhost::Authority::BITS = T.let(T.unsafe(nil), Integer)
Localhost::Authority::SERVER_CIPHERS = T.let(T.unsafe(nil), String)
