# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `formatador` gem.
# Please instead update this file by running `bin/tapioca gem formatador`.

class Formatador
  # @return [Formatador] a new instance of Formatador
  def initialize; end

  def display(string = T.unsafe(nil)); end
  def display_compact_table(hashes, keys = T.unsafe(nil), **options, &block); end
  def display_line(string = T.unsafe(nil)); end
  def display_lines(lines = T.unsafe(nil)); end
  def display_table(hashes, keys = T.unsafe(nil), **options, &block); end
  def indent(&block); end
  def indentation; end
  def new_line; end
  def parse(string); end
  def redisplay(string = T.unsafe(nil), width = T.unsafe(nil)); end
  def redisplay_line(string = T.unsafe(nil), width = T.unsafe(nil)); end
  def redisplay_progressbar(current, total, options = T.unsafe(nil)); end
  def strip(string); end

  private

  def calculate_datum(header, hash); end
  def length(value); end
  def progressbar(current, total, options); end

  class << self
    def display(*args, &block); end
    def display_compact_table(*args, **kwargs, &block); end
    def display_line(*args, &block); end
    def display_lines(*args, &block); end
    def display_table(*args, **kwargs, &block); end
    def indent(*args, &block); end
    def new_line(*args, &block); end
    def parse(*args, &block); end
    def redisplay(*args, &block); end
    def redisplay_line(*args, &block); end
    def redisplay_progressbar(*args, &block); end
  end
end

Formatador::INDENT_REGEX = T.let(T.unsafe(nil), Regexp)
Formatador::PARSE_REGEX = T.let(T.unsafe(nil), Regexp)

class Formatador::ProgressBar
  # @return [ProgressBar] a new instance of ProgressBar
  def initialize(total, opts = T.unsafe(nil), &block); end

  # Returns the value of attribute current.
  def current; end

  # Sets the attribute current
  #
  # @param value the value to set the attribute current to.
  def current=(_arg0); end

  def increment(increment = T.unsafe(nil)); end

  # Returns the value of attribute opts.
  def opts; end

  # Sets the attribute opts
  #
  # @param value the value to set the attribute opts to.
  def opts=(_arg0); end

  # Returns the value of attribute total.
  def total; end

  # Sets the attribute total
  #
  # @param value the value to set the attribute total to.
  def total=(_arg0); end

  private

  # @return [Boolean]
  def complete?; end
end

Formatador::STYLES = T.let(T.unsafe(nil), Hash)
Formatador::VERSION = T.let(T.unsafe(nil), String)
