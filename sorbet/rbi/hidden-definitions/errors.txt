# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi hidden-definitions

# typed: autogenerated

# wrong constant name <DeclBuilderForProcs>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <DeclBuilderForProcs>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:<DeclBuilderForProcs>>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Magic>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Magic>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:<Magic>>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <PackageSpecRegistry>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <PackageSpecRegistry>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_0>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_1>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_2>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_3>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_4>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_5>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_6>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <RESERVED_7>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <TypeAlias>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <TypeAlias>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <root>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:<root>>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <todo sym>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <todo sym>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <top>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <top>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Abbrev
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Abbrev
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name connect_internal
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deconstruct
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name intersect?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shelljoin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_csv
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_h
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Async::HTTP::Cache::General::CONNECT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Async::HTTP::Cache::General::DELETE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Delegator
# uninitialized constant Async::HTTP::Cache::General::GET
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Set
#                Net
#                Gem
# uninitialized constant Async::HTTP::Cache::General::HEAD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Thread
# uninitialized constant Async::HTTP::Cache::General::LINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Async::HTTP::Cache::General::OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  OptionParser
# uninitialized constant Async::HTTP::Cache::General::PATCH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Async::HTTP::Cache::General::POST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Async::HTTP::Cache::General::PUT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Async::HTTP::Cache::General::TRACE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Traces
# uninitialized constant Async::HTTP::Cache::General::UNLINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:BasicObject>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Benchmark
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Benchmark
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name n_significant_digits
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precision
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precision_scale
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scale
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name interpret_loosely
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name irb
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name status_code
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name jruby_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name jruby_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name maglev_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name maglev_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mingw_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mingw_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mri_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mri_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin64_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin64_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mswin_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rbx_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rbx_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name truffleruby_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name truffleruby_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name x64_mingw_30?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name x64_mingw_3?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Definition::GENERICS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Definition::GENERIC_CACHE
# uninitialized constant Bundler::Definition::GENERIC_CACHE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Definition::GENERICS
# wrong constant name dependencies_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name most_specific_locked_platform
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requested_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name resolve_only_locally!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_lock=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_proxy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Dependency::TYPES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name branch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expanded_platforms
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name git
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name github
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ref
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sha1
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_primary_source_safety
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name environment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name report
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replace_with_backup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name env_to_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name from_env
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Base>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CompactIndex>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Dependency>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Downloader>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Index>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TooManyRequestsError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_spec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetchers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name http_proxy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs_with_retry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_api
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user_agent
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name api_fetcher?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name display_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name downloader
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClientFetcher>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs_for_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Fetcher::CompactIndex::ClientFetcher::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name call
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ui
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ui=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compact_index_request
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_api_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_formatted_specs_and_deps
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unmarshalled_dep_gems
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name connection
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name redirect_limit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name request
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name api_timeout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name api_timeout=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_endpoint
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_endpoint=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_retries
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_retries=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name redirect_limit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name redirect_limit=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cp_lr
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link_entry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allowed_push_host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name already_tagged?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_checksum
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_gem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name built_gem_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clean?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name committed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_branch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_remote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_push?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_push_host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemspec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name git_push
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name guard_clean
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_gem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rubygem_push
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sh
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sh_with_input
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sh_with_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag_prefix=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version_tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemspec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag_prefix=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specificity_score
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_platform
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name same_deps
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name same_specificity
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name major?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name minor?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prerelease_specified
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prerelease_specified=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sort_versions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlock_gems
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:GraphVizClient>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name edge_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name groups
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name node_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_format
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name viz
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name g
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::LazySpecification::GENERICS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::LazySpecification::GENERIC_CACHE
# uninitialized constant Bundler::LazySpecification::GENERIC_CACHE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::LazySpecification::GENERICS
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name platform_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::LazySpecification::Identifier
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::LazySpecification::Identifier
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name bundled_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Molinillo::Compatibility
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Comparable
# uninitialized constant Bundler::Molinillo::Compatibility
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Comparable
# wrong constant name dependencies_equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parent_folder
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name permission_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_dependency_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name app_cache_dirname
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name app_cache_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cache
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cached!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name can_lock?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_names=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name double_check_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch_gemspec_files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_install_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name include?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name installed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options_to_lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name post_install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_s
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unlock!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unmet_deps
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CommandConflict>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SourceConflict>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name installed_plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugin_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unregister_plugin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Git>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Rubygems>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name install_definition
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Plugin::Installer::Git::DEFAULT_GLOB
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_bin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Plugin::Installer::Rubygems::API_REQUEST_LIMIT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Plugin::Installer::Rubygems::API_REQUEST_SIZE
# uninitialized constant Bundler::Plugin::Installer::Rubygems::API_REQUEST_SIZE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Plugin::Installer::Rubygems::API_REQUEST_LIMIT
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name save_plugin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uninstall
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::RemoteSpecification::GENERICS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::RemoteSpecification::GENERIC_CACHE
# uninitialized constant Bundler::RemoteSpecification::GENERIC_CACHE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::RemoteSpecification::GENERICS
# wrong constant name required_rubygems_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Resolver::GENERICS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Resolver::GENERIC_CACHE
# uninitialized constant Bundler::Resolver::GENERIC_CACHE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Resolver::GENERICS
# wrong constant name results_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name activated_platforms
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name activated_platforms=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sorted_activated_platforms
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attempt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attempts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_run=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name total_runs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name total_runs=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attempts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_attempts
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_retries
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_default_gems_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_to_load_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name backport_ext_builder_monitor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name correct_for_windows_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_stubs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_bundler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_remote_fetcher
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_env_plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plain_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plain_specs=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stub_rubygems
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name supports_bundler_trampolining?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::AlmostModern
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::AlmostModern
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Ancient
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Ancient
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Future
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Future
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Legacy
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Legacy
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Modern
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Module
# uninitialized constant Bundler::RubygemsIntegration::Modern
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Module
# uninitialized constant Bundler::RubygemsIntegration::MoreFuture
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::MoreFuture
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::MoreModern
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::MoreModern
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Transitional
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Bundler::RubygemsIntegration::Transitional
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name install_locked_bundler_and_restart_with_it_if_needed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name restart_with_locked_bundler_if_needed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name update_bundler_and_restart_with_it_if_needed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Mirror>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Mirrors>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Validator>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name processor_count
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fallback_timeout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fallback_timeout=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uri=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Rule>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name description
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fail!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name k
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name key_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RubygemsAggregate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_dependency_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cached!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_only!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Source::Git::DEFAULT_GLOB
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name glob
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_cache_path_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependency_api_available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name multiple_remotes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_remotes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remote_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_global_rubygems_remote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name aggregate_global_source?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expired_sources?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name global_path_source
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name implicit_global_source?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_only!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lock_other_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lock_rubygems_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merged_gem_lockfile_sections!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merged_gem_lockfile_sections?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name non_default_explicit_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name non_global_rubygems_sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name direct_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pinned_spec_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name missing_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::StubSpecification::GENERICS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::StubSpecification::GENERIC_CACHE
# uninitialized constant Bundler::StubSpecification::GENERIC_CACHE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::StubSpecification::GENERICS
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gem_build_complete_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name manually_installed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Cyclic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_child
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_node
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Actions>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AmbiguousCommandError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Argument>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Arguments>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Base>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Command>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CoreExt>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DynamicCommand>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Error>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Group>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HiddenCommand>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Invocation>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvocationError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LineEditor>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:MalformattedArgumentError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NestedContext>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NoKwargSpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Option>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Options>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RequiredArgumentMissingError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::SHELL_DELEGATED_METHODS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Sandbox>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Shell>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UndefinedCommandError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UnknownArgumentError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Util>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CapturableERB>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CreateFile>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CreateLink>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Directory>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:EmptyDirectory>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InjectIntoFile>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _cleanup_options_and_set
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _shared_configuration
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name action
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_link
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name append_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name append_to_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name apply
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name chmod
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name comment_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name copy_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_link
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination_root=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name directory
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty_directory
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_in_source_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gsub_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name in_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject_into_class
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject_into_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inject_into_module
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name insert_into_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inside
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name link_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepend_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepend_to_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relative_to_original_destination_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run_ruby_script
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name template
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uncomment_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Actions::CapturableERB::Revision
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VERSION
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_runtime_options!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_paths_for_search
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force_on_collision?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force_or_skip_or_conflict
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name identical?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_conflict_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name render
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name execute!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_level_lookup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name convert_encoded_instructions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name destination=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exists?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name given_destination
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_with_conflict_check
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_conflict_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name on_file_clash_behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretend?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relative_destination
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name revoke!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name behavior
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name flag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replace!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replacement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name description
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enum
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name human_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name show_default?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name usage
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid_type?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remaining
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name args
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name args=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parent_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parent_options=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allow_incompatible_default_type!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name argument
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name arguments
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attr_accessor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attr_reader
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attr_writer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name baseclass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name basename
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_default_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_default_type!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_options_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dispatch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exit_on_failure?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_and_refresh_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_and_refresh_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name from_superclass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_argument_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_no_command_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_no_task_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inherited
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize_added
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name is_thor_reserved_word?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_added
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_commands?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_commands_context
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_argument
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_class_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name start
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict_args_position
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict_args_position!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict_args_position?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register_klass_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subclass_files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subclasses
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name formatted_usage
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_argument_error?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_no_method_error?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hidden?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name not_debugging?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_arguments_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sans_backtrace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HashWithIndifferentAccess>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::CoreExt::HashWithIndifferentAccess::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::CoreExt::HashWithIndifferentAccess::K
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::CoreExt::HashWithIndifferentAccess::V
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name convert_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name except
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name key?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_missing
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name replace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse_merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse_merge!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name values_at
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::DynamicCommand::FILE_REGEXP
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Group::SHELL_DELEGATED_METHODS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _invoke_for_class_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name desc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_options_from_invocations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle_argument_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invocation_blocks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invocations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_from_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_invocation
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name self_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name self_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::HiddenCommand::FILE_REGEXP
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _parse_initialization_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _retrieve_class_and_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _retrieve_class_and_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _shared_configuration
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_command_chain
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_all
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name invoke_with_padding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepare_for_invocation
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Basic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Readline>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prompt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name readline
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name available?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:PathCompletion>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matches
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name best_available
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name readline
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name entered?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name aliases
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name array?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name boolean?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dasherize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dasherized?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hide
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lazy_default
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name numeric?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name repeatable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name string?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switch_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name undasherize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name usage
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_default_type!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Options::NUMERIC
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Numeric
# wrong constant name assign_result!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_is_switch?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_is_switch_formatted?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize_switch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_boolean
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_peek
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parsing_options?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switch?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switch_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unshift
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_switches
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Basic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Color>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HTML>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _shared_configuration
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_collision
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_in_columns
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_table
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_wrapped
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name terminal_width
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name with_padding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name answer_match
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name as_unicode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask_filtered
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask_simply
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name can_display_colors?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_width
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_width_stty
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_width_tput
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_collision
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_collision_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name git_merge_tool
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name indent
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name is?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lookup_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge_tool
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mute
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mute?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name padding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name padding=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prepare_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_in_columns
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_table
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name print_wrapped
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name quiet?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name say_status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name show_diff
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stderr
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stdout
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name terminal_width
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name truncate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unix?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Shell::Color::DEFAULT_TERMINAL_WIDTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name are_colors_disabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name are_colors_supported?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name diff_lcs_loaded?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_diff_line
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::Thor::Shell::HTML::DEFAULT_TERMINAL_WIDTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name diff_lcs_loaded?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name output_diff_line
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checker
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name switches
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unknown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checker
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name camel_case
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_globs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_html
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_by_namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_class_and_command_by_namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_class_and_task_by_namespace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name globs_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_thorfile
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespace_from_thor_class
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name namespaces_in_content
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name snake_case
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor_classes_in
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor_root
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name thor_root_glob
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name banner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_unknown_options!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name command_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_task
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deprecation_warning
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name desc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_required_check?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dispatch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dynamic_command_class
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_command_possibilities
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_task_possibilities
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name long_desc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize_command_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize_task_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name package_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_commands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name printable_tasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name retrieve_command_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name retrieve_task_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stop_on_unknown_option?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommand
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommand_classes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommand_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subcommands
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subtask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subtask_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subtasks
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name task_help
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_color
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name confirm
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name level=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name no?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name quiet?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name silence
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unprinted_warnings
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yes?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:BadURIError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Error>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:FTP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:File>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Generic>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HTTP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HTTPS>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidComponentError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidURIError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LDAP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LDAPS>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:MailTo>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RFC2396_Parser>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RFC2396_REGEXP>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RFC3986_Parser>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Util>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::FTP::ABS_URI_REF
# uninitialized constant Bundler::URI::FTP::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::FTP::DEFAULT_PORT
# uninitialized constant Bundler::URI::FTP::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::FTP::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::FTP::REL_URI_REF
# uninitialized constant Bundler::URI::FTP::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::FTP::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::FTP::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::FTP::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::FTP::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::FTP::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::FTP::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::FTP::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::FTP::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::FTP::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::FTP::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name set_typecode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name typecode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name typecode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new2
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::File::ABS_URI_REF
# uninitialized constant Bundler::URI::File::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::File::DEFAULT_PORT
# uninitialized constant Bundler::URI::File::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::File::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::File::REL_URI_REF
# uninitialized constant Bundler::URI::File::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::File::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::File::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::File::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::File::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::File::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::File::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::File::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::File::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::File::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::File::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name check_password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name +
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name -
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::Generic::ABS_URI_REF
# uninitialized constant Bundler::URI::Generic::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::Generic::DEFAULT_PORT
# uninitialized constant Bundler::URI::Generic::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::Generic::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::Generic::REL_URI_REF
# uninitialized constant Bundler::URI::Generic::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::Generic::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::Generic::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::Generic::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::Generic::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::Generic::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::Generic::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::Generic::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::Generic::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::Generic::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::Generic::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name absolute
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name absolute?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name coerce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name component_ary
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_proxy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fragment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fragment=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hierarchical?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name host=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hostname
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hostname=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name merge!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name normalize!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name opaque
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name opaque=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parser
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name password=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name port=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name query
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name query=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name registry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name registry=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name relative?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name route_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name route_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheme
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheme=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name select
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_host
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_opaque
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_registry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scheme
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name user=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name userinfo=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build2
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_proxy?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use_registry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTP::ABS_URI_REF
# uninitialized constant Bundler::URI::HTTP::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTP::DEFAULT_PORT
# uninitialized constant Bundler::URI::HTTP::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::HTTP::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTP::REL_URI_REF
# uninitialized constant Bundler::URI::HTTP::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTP::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::HTTP::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::HTTP::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTP::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::HTTP::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTP::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::HTTP::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTP::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTP::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTP::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name request_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTPS::ABS_URI_REF
# uninitialized constant Bundler::URI::HTTPS::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::COMPONENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Complex
# uninitialized constant Bundler::URI::HTTPS::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTPS::DEFAULT_PORT
# uninitialized constant Bundler::URI::HTTPS::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::HTTPS::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTPS::REL_URI_REF
# uninitialized constant Bundler::URI::HTTPS::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTPS::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::HTTPS::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::HTTPS::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTPS::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::HTTPS::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::HTTPS::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::HTTPS::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::HTTPS::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTPS::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::HTTPS::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAP::ABS_URI_REF
# uninitialized constant Bundler::URI::LDAP::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAP::DEFAULT_PORT
# uninitialized constant Bundler::URI::LDAP::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::LDAP::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAP::REL_URI_REF
# uninitialized constant Bundler::URI::LDAP::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAP::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::LDAP::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::LDAP::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAP::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::LDAP::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAP::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::LDAP::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAP::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAP::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAP::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attributes=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::ABS_URI_REF
# uninitialized constant Bundler::URI::LDAPS::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::COMPONENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Complex
# uninitialized constant Bundler::URI::LDAPS::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::DEFAULT_PORT
# uninitialized constant Bundler::URI::LDAPS::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::LDAPS::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::REL_URI_REF
# uninitialized constant Bundler::URI::LDAPS::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::LDAPS::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::LDAPS::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::SCOPE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::SCOPE_SUB
# uninitialized constant Bundler::URI::LDAPS::SCOPE_BASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::SCOPE_ONE
# uninitialized constant Bundler::URI::LDAPS::SCOPE_ONE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::SCOPE_SUB
#                Bundler::URI::LDAPS::SCOPE_BASE
# uninitialized constant Bundler::URI::LDAPS::SCOPE_SUB
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::SCOPE_ONE
# uninitialized constant Bundler::URI::LDAPS::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::LDAPS::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::LDAPS::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::LDAPS::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::LDAPS::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAPS::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::LDAPS::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::MailTo::ABS_URI_REF
# uninitialized constant Bundler::URI::MailTo::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::MailTo::DEFAULT_PORT
# uninitialized constant Bundler::URI::MailTo::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::Retry
# uninitialized constant Bundler::URI::MailTo::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::MailTo::REL_URI_REF
# uninitialized constant Bundler::URI::MailTo::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::MailTo::RFC3986_Parser
#                Bundler::URI::RFC3986_Parser
#                Bundler::URI::MailTo::RFC2396_Parser
#                Bundler::URI::RFC2396_Parser
# uninitialized constant Bundler::URI::MailTo::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::MailTo::TBLENCWWWCOMP_
#                Bundler::URI::TBLENCWWWCOMP_
# uninitialized constant Bundler::URI::MailTo::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::URI::MailTo::TBLDECWWWCOMP_
#                Bundler::URI::TBLDECWWWCOMP_
# uninitialized constant Bundler::URI::MailTo::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::URI::MailTo::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::MailTo::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Bundler::VersionRanges
# uninitialized constant Bundler::URI::MailTo::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name headers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name headers=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_headers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_mailtext
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_rfc822text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name make_regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unescape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:PATTERN>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name make_components_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decode_www_form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decode_www_form_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_www_form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_www_form_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_encoding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheme_list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NEq>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ReqR>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::VersionRanges::NEq::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::VersionRanges::ReqR::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Endpoint>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cover?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name left
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name left=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name right
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name right=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name single?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Bundler::VersionRanges::ReqR::Endpoint::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inclusive
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inclusive=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for_many
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name configure_gem_home_and_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name most_specific_locked_platform?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_exec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_system
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name preferred_gemfile_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset_settings_and_root!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name self_manager
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unbundled_env
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unbundled_exec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unbundled_system
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HtmlExtension>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CGI::TABLE_FOR_ESCAPE_HTML__
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name a
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name blockquote
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name caption
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name checkbox
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name checkbox_group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name file_field
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hidden
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name html
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name image_button
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name img
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name multipart_form
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name password_field
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name popup_menu
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name radio_button
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name radio_group
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scrolling_list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name submit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name text_field
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name textarea
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CMath
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant CMath
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name json_creatable?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CodeRay::Encoders::Terminal::DEFAULT_OPTIONS
# uninitialized constant CodeRay::Scanners::Java::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CodeRay::Scanners::Java::Id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CodeRay::Scanners::Java::KINDS_NOT_LOC
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CodeRay::Scanners::Java::SCANNER_STATE_INFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CodeRay::Scanners::Java::SCAN_ERROR_MESSAGE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CodeRay::Scanners::Java::Version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  CodeRay::VERSION
# uninitialized constant CodeRay::Scanners::Scanner::Id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant CodeRay::Scanners::Scanner::Version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  CodeRay::VERSION
# uninitialized constant Console::Logger::DEBUG
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Console::Logger::ERROR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  IOError
#                Errno
# uninitialized constant Console::Logger::FATAL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Console::Logger::INFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Console::Logger::LEVELS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Console::Logger::MAXIMUM_LEVEL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Console::Logger::MINIMUM_LEVEL
# uninitialized constant Console::Logger::MINIMUM_LEVEL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Console::Logger::MAXIMUM_LEVEL
# uninitialized constant Console::Logger::WARN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Warning
# uninitialized constant Continuation
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Continuation
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Coverage
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Coverage
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant DBM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant DBM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant DBMError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant DBMError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant DRb
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  ERB
# uninitialized constant DRb
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  ERB
# uninitialized constant Data
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Date
# uninitialized constant Data
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Date
# wrong constant name infinite?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scopes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checker
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_s
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name distance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name distance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name distance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name min3
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name names_to_exclude
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name receiver
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requireables
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name augment
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name correct
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dictionary
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dictionary_without_leaves
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dimensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_leaves
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plausible_dimensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possible_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name separator
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tree_depth
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cvar_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ivar_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lvar_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_names
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name correct_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name formatter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name formatter=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spell_checkers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_child
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exists?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name def_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name def_module
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compact
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sum
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name +
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ArithmeticSequence>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Chain>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Producer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_with_index
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Enumerator::ArithmeticSequence::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name begin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name end
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exclude_end?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name last
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name step
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Enumerator::Chain::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eager
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_proc
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name produce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gid
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gid=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mem=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name passwd
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name passwd=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Group>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name change
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name change=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dir=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expire
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expire=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gecos
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gecos=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gid=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name passwd=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shell=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uclass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uclass=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name uid=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Passwd>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Exception2MessageMapper
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Exception2MessageMapper
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Adapters::Rewindable::CONNECT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Adapters::Rewindable::DELETE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Delegator
# uninitialized constant Falcon::Adapters::Rewindable::GET
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Set
#                Net
#                Gem
# uninitialized constant Falcon::Adapters::Rewindable::HEAD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Thread
# uninitialized constant Falcon::Adapters::Rewindable::LINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Adapters::Rewindable::OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  OptionParser
# uninitialized constant Falcon::Adapters::Rewindable::PATCH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Adapters::Rewindable::PUT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Adapters::Rewindable::TRACE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Traces
# uninitialized constant Falcon::Adapters::Rewindable::UNLINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Middleware::Proxy::CONNECT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Falcon::Middleware::Proxy::CONNECTION
# uninitialized constant Falcon::Middleware::Proxy::DELETE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Delegator
# uninitialized constant Falcon::Middleware::Proxy::GET
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Set
#                Net
#                Gem
# uninitialized constant Falcon::Middleware::Proxy::HEAD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Thread
# uninitialized constant Falcon::Middleware::Proxy::LINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Middleware::Proxy::OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  OptionParser
# uninitialized constant Falcon::Middleware::Proxy::PATCH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Middleware::Proxy::POST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Middleware::Proxy::PUT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Falcon::Middleware::Proxy::TRACE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Traces
# uninitialized constant Falcon::Middleware::Proxy::UNLINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Fcntl
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Fcntl
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name backtrace
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name backtrace_locations
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name blocking?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name transfer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name blocking?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name current_scheduler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name schedule
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scheduler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scheduler
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Fiddle
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  File
# uninitialized constant Fiddle
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  File
# wrong constant name absolute_path?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exists?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant FileUtils::DryRun::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant FileUtils::NoWrite::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant FileUtils::Verbose::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Find
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Find
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name _compile_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _delegator_method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _valid_method?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name debug=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name receiver
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name garbage_collect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_compact_info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name measure_total_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name measure_total_time=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name total_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name using_rvargc?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_transient_heap_internal_consistency
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant GDBM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant GDBM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant GDBMError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant GDBMError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant GDBMFatalError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant GDBMFatalError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:InstallerUninstallerUtils>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RuntimeRequirementNotMetError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpecFetcher>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SpecificationPolicy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TSort>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UninstallError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UnknownCommandError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UnknownCommandSpellChecker>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::AvailableSet
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Gem::AvailableSet
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prioritize!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ipv4_fallback_enabled
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ipv4_fallback_enabled=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prioritizes_bundler?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::DependencyInstaller
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Gem::DependencyList
# uninitialized constant Gem::DependencyInstaller
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Gem::DependencyList
# wrong constant name deprecate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name next_rubygems_major_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rubygems_deprecate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rubygems_deprecate_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Ext::ExtConfBuilder::CHDIR_MONITOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Gem::Ext::ExtConfBuilder::CHDIR_MUTEX
# uninitialized constant Gem::Ext::ExtConfBuilder::CHDIR_MUTEX
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Gem::Ext::ExtConfBuilder::CHDIR_MONITOR
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_relative_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:FakePackage>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ensure_writable_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name explicit_version_requirement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemdeps_load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_plugins
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name copy_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dir_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dir_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract_files
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prog_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prog_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inherited
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regenerate_plugins_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_plugins_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_cache_dir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match_gem?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match_spec?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sort_priority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _sorted_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name force=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unused_unwind_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies_equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Log>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_edge_no_circular
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_vertex
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_edge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name detach_vertex_named
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pop!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reverse_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name rewind_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_payload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Resolver::Molinillo::DependencyGraph::Log::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _path_to?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _recursive_predecessors
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _recursive_successors
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unused_unwind_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unused_unwind_options=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibility_set
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibility_set=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name underlying_error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name underlying_error=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Resolver::Molinillo::Resolver::Resolution::PossibilitySet::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibilities
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name possibilities=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Resolver::Molinillo::Resolver::Resolution::UnwindDetails::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name all_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name conflicting_requirements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name conflicting_requirements=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_tree
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_tree=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_trees
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirement_trees=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirements_unwound_to_instead
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name requirements_unwound_to_instead=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reversed_requirement_tree_index
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_index
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_index=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_requirement
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_requirement=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sub_dependencies_to_avoid
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unwinding_to_primary_requirement?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name members
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dependencies_equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_with_trees
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specification_provider
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_ruby_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name required_rubygems_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name suggestion
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name suggestion=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Security::DIGEST_ALGORITHM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Gem::Security::DIGEST_NAME
# uninitialized constant Gem::Security::DIGEST_ALGORITHM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Gem::Security::DIGEST_NAME
# wrong constant name available_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name detect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name prerelease_specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name search_for_dependency
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec_for_dependency
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name specs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name suggest_gems_from_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tuples_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fetcher=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Specification::GENERICS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Gem::Specification::GENERIC_CACHE
# uninitialized constant Gem::Specification::GENERIC_CACHE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Gem::Specification::GENERICS
# wrong constant name <Class:YamlBackfiller>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _deprecated_validate_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _deprecated_validate_metadata
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _deprecated_validate_permissions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deleted_gem?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name removed_method_calls
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_ruby
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_yaml
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name latest_spec_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stubs_for_pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name packaging
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name packaging=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_duplicate_dependencies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_metadata
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_optional
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_permissions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name validate_required!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::Stream
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Gem::StreamUI
# uninitialized constant Gem::Stream
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Gem::StreamUI
# wrong constant name build_extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name missing_extensions?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name full_name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name platform
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_gemspec_stub
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gemspec_stub
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_child
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each_node
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_strongly_connected_component_from
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strongly_connected_components
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsort_each
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name spec=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unknown_command
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attach_correctable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name corrections
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Gem::UriParser
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Gem::UriParser
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Gem::UriParsing
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Gem::UriParsing
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name _deprecated_silent_system
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name activated_gem_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cache_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name data_home
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_system_update_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable_system_update_message=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_config_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name open_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugin_suffix_pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugin_suffix_regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name plugindir
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name solaris_platform?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant GetoptLong
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant GetoptLong
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name deconstruct_keys
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby2_keywords_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby2_keywords_hash?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Buffer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ConsoleMode>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name beep
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_winsize_changed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear_screen
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name console_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name console_mode=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cooked
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cooked!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_down
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_left
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_right
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cursor_up
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name echo=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name echo?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name erase_line
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name erase_screen
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name getch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name getpass
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name goto
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name goto_column
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name iflush
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ioflush
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name noecho
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonblock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonblock=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonblock?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nread
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name oflush
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pathconf
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pressed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ready?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scroll_backward
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scroll_forward
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_encoding_by_bom
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_priority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_readable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_writable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name winsize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name winsize=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AccessError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AllocationError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:InvalidatedError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:LockedError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clear
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name copy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name external?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name free
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_value
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hexdump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name internal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name locked?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mapped?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name null?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pread
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pwrite
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name read
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name readonly?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name resize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_value
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name size
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name slice
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name transfer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name map
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name echo=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name raw!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name console
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name netmask
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name zone_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name zone_id=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant IRB
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  ERB
# uninitialized constant IRB
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  ERB
# wrong constant name to_bn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_convert
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_slash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_slash=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_slash?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name from_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_fast_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_pretty_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_file!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Jacobian
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Jacobian
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Kconv
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Kconv
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name pretty_inspect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name at_exit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant LUSolve
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant LUSolve
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name debug!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fatal!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name info!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name warn!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Logger::LogDevice::SiD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name match_length
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Matrix
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Matrix
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant MessagePack
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant MessagePack
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name private?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name protected?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name exit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_check_owner
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_exit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_locked?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_owned?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_synchronize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mon_try_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new_cond
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name synchronize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name try_mon_enter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name wait_for_cond
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant MonitorMixin::ConditionVariable::Timeout
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant MonitorMixin::ConditionVariable::Timeout
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# uninitialized constant Mutex_m
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Mutex_m
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant NKF
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant NKF
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::DNS
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::DNS
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTP
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTP
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTPConnectionError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTPConnectionError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTPError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::HTTPError
# uninitialized constant Net::FTPError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::HTTPError
# uninitialized constant Net::FTPPermError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  FiberError
# uninitialized constant Net::FTPPermError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  FiberError
# uninitialized constant Net::FTPProtoError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTPProtoError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTPReplyError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTPReplyError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::FTPTempError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  TypeError
# uninitialized constant Net::FTPTempError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  TypeError
# uninitialized constant Net::HTTP::DigestAuth
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::HTTP::DigestAuth
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::IMAP
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::IMAP
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::NTLM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::NTLM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTP
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTP
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPAuthenticationError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPAuthenticationError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::HTTPError
# uninitialized constant Net::SMTPError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::HTTPError
# uninitialized constant Net::SMTPFatalError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::ProtoFatalError
#                Net::HTTPFatalError
# uninitialized constant Net::SMTPFatalError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::ProtoFatalError
#                Net::HTTPFatalError
# uninitialized constant Net::SMTPServerBusy
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPServerBusy
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPSyntaxError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::ProtoSyntaxError
# uninitialized constant Net::SMTPSyntaxError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Net::ProtoSyntaxError
# uninitialized constant Net::SMTPUnknownError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPUnknownError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPUnsupportedCommand
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Net::SMTPUnsupportedCommand
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Newton
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Newton
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matchee
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RUBYGEMS_ACTIVATION_MONITOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_yaml
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yaml_tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Object>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Observable
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Observable
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name indefinite_length
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name indefinite_length=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name +@
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name -@
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name /
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name abs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_flags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name negative?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_flags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Buffer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name getbyte
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <<
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name concat
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ccm_data_len=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::DSS
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::DSS
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::DSS1
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::DSS1
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::MD2
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  OpenSSL::Digest::MD5
#                OpenSSL::Digest::MD4
# uninitialized constant OpenSSL::Digest::MD2
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  OpenSSL::Digest::MD5
#                OpenSSL::Digest::MD4
# uninitialized constant OpenSSL::Digest::MDC2
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::MDC2
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant OpenSSL::Digest::SHA
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  OpenSSL::Digest::SHA1
# uninitialized constant OpenSSL::Digest::SHA
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  OpenSSL::Digest::SHA1
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base64digest
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name base64digest
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:KDFError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hkdf
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pbkdf2_hmac
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scrypt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ClassMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name included
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name signed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenSSL::PKCS5::PKCS5Error
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant OpenSSL::PKCS5::PKCS5Error
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_octet_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compare?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name decrypt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name derive
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encrypt
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name oid
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_to_pem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_to_pem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name sign_raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_raw
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify_recover
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name generate_parameters
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_protocols
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_protocols=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_select_cb
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_select_cb=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enable_fallback_scsv
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name max_version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name min_version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tmp_dh=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenSSL::SSL::SSLSocket::BLOCK_SIZE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name alpn_protocol
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name finished_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name peer_finished_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tmp_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name open
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fileno
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Factory>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Request>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Response>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TimestampError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TokenInfo>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional_certs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional_certs=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allowed_digests
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allowed_digests=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name create_timestamp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_policy_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_policy_id=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gen_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gen_time=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serial_number
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serial_number=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name algorithm
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name algorithm=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cert_requested=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cert_requested?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_imprint
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_imprint=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonce=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name policy_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name policy_id=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name failure_info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name status_text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name token
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name token_info
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tsa_certificate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name verify
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name algorithm
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name gen_time
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name message_imprint
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name nonce
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ordering
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name policy_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serial_number
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AuthorityInfoAccess>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AuthorityKeyIdentifier>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CRLDistributionPoints>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Helpers>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SubjectKeyIdentifier>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name value_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ca_issuer_uris
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ocsp_uris
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name authority_key_identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name crl_uris
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name find_extension
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name subject_key_identifier
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_utf8
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_der
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fips_mode
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fixed_length_secure_compare
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name secure_compare
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __id__!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __send__!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name class!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name define_singleton_method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name delete_field!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dig!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name display!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dup!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name each_pair!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name encode_with!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enum_for!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extend!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name freeze!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name hash!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name init_with
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name init_with!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inspect!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_eval!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_exec!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_variable_get!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_variable_set!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instance_variables!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name itself!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name marshal_dump!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name object_id!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name protected_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public_send!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_instance_variable!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name send!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name singleton_class!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name singleton_method!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name singleton_methods!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name taint!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name tap!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name then!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_enum!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_h!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_s!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name trust!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name untaint!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name untrust!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name yield_self!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant OpenURI
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Open3
# uninitialized constant OpenURI
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Open3
# wrong constant name additional_message
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require_exact
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name require_exact=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_candidates
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name additional=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name width_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant PStore
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant PStore
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant PTY
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Pry
# uninitialized constant PTY
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Pry
# uninitialized constant PackageSpec
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant PackageSpec
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:PackageSpec>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Parser::Ruby24::Racc_Main_Parsing_Routine
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Parser::Ruby24::Racc_Runtime_Core_Id_C
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby24::Racc_Runtime_Core_Version_C
# uninitialized constant Parser::Ruby24::Racc_Runtime_Core_Version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby24::Racc_Runtime_Core_Version_R
#                Parser::Ruby24::Racc_Runtime_Core_Version_C
#                Parser::Ruby24::Racc_Runtime_Version
#                Parser::Ruby24::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby24::Racc_Runtime_Core_Version_C
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby24::Racc_Runtime_Core_Version_R
#                Parser::Ruby24::Racc_Runtime_Version
#                Parser::Ruby24::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby24::Racc_Runtime_Core_Version_R
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby24::Racc_Runtime_Core_Version_C
#                Parser::Ruby24::Racc_Runtime_Version
#                Parser::Ruby24::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby24::Racc_Runtime_Type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby24::Racc_Runtime_Version
# uninitialized constant Parser::Ruby24::Racc_Runtime_Version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby24::Racc_Runtime_Core_Version
# uninitialized constant Parser::Ruby24::Racc_YY_Parse_Method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Parser::Ruby31::Racc_Main_Parsing_Routine
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Id_C
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_R
#                Parser::Ruby31::Racc_Runtime_Core_Version_C
#                Parser::Ruby31::Racc_Runtime_Version
#                Parser::Ruby31::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Version_C
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_R
#                Parser::Ruby31::Racc_Runtime_Version
#                Parser::Ruby31::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Core_Version_R
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version_C
#                Parser::Ruby31::Racc_Runtime_Version
#                Parser::Ruby31::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Ruby31::Racc_Runtime_Type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby31::Racc_Runtime_Version
# uninitialized constant Parser::Ruby31::Racc_Runtime_Version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Parser::Ruby31::Racc_Runtime_Core_Version
# uninitialized constant Parser::Ruby31::Racc_YY_Parse_Method
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Prime
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Prime
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <<
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name >>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name clone
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Proc0
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc0
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc1
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc1
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc10
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc10
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc2
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc2
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc3
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc3
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc4
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc4
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc5
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc5
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc6
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc6
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc7
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc7
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc8
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc8
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc9
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Proc9
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name wait
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keyword_init?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name _fork
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::ContentEncoding::CONNECT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::ContentEncoding::DELETE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Delegator
# uninitialized constant Protocol::HTTP::ContentEncoding::GET
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Set
#                Net
#                Gem
# uninitialized constant Protocol::HTTP::ContentEncoding::HEAD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Thread
# uninitialized constant Protocol::HTTP::ContentEncoding::LINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::ContentEncoding::OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  OptionParser
# uninitialized constant Protocol::HTTP::ContentEncoding::PATCH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::ContentEncoding::POST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::ContentEncoding::PUT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::ContentEncoding::TRACE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Traces
# uninitialized constant Protocol::HTTP::ContentEncoding::UNLINK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::Header::CacheControl::COMMA
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP::Header::Connection::COMMA
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP2::ContinuationFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::ContinuationFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::ContinuationFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::ContinuationFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::ContinuationFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::ContinuationFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::ContinuationFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::ContinuationFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::DataFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::DataFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::DataFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::DataFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::DataFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::DataFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::DataFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::DataFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::GoawayFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::GoawayFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::GoawayFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::GoawayFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::GoawayFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::GoawayFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::GoawayFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::GoawayFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::HeadersFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Protocol::HTTP2::HeadersFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::HeadersFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::HeadersFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::HeadersFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::HeadersFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::PingFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::PingFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::PingFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::PingFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::PingFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::PingFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::PingFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::PingFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::PriorityFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::PriorityFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::PriorityFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::PriorityFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::PriorityFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::PriorityFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::PriorityFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::PriorityFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::PushPromiseFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::PushPromiseFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::PushPromiseFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::PushPromiseFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::PushPromiseFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::PushPromiseFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::PushPromiseFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::PushPromiseFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::ResetStreamFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::ResetStreamFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::ResetStreamFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::ResetStreamFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::ResetStreamFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::ResetStreamFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::ResetStreamFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::ResetStreamFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::SettingsFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::SettingsFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::SettingsFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::SettingsFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::SettingsFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::SettingsFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::SettingsFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::SettingsFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::WindowUpdateFrame::HEADER_FORMAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::HeadersFrame
# uninitialized constant Protocol::HTTP2::WindowUpdateFrame::LENGTH_HISHIFT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::WindowUpdateFrame::LENGTH_LOMASK
# uninitialized constant Protocol::HTTP2::WindowUpdateFrame::LENGTH_LOMASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::WindowUpdateFrame::LENGTH_HISHIFT
# uninitialized constant Protocol::HTTP2::WindowUpdateFrame::STREAM_ID_MASK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::STREAM_CLOSED
# uninitialized constant Protocol::HTTP2::WindowUpdateFrame::VALID_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Protocol::HTTP2::WindowUpdateFrame::VALID_STREAM_ID
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Protocol::HTTP2::VALID_WEIGHT
# uninitialized constant Pry::BasicObject::RUBYGEMS_ACTIVATION_MONITOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Pry::Command::COLORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Pry::Command::Ls::COLORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Pry::Command::Ls::VOID_VALUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Pry::Command::Wtf::COLORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Pry::Command::Wtf::VOID_VALUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Psych::UnsafeYAML
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Psych::UnsafeYAML
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name visit_Symbol
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dispatch_cache
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_builtin_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_domain_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name config
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name domain_types
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name domain_types=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump_tags=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name libyaml_version
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_tags
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name load_tags=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name safe_dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name safe_load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsafe_load
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name unsafe_load_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant RDoc::Constant::RDoc
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant RDoc::Constant::RDoc
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant RDoc::Markup::Special
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant RDoc::Markup::Special
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant RDoc::RipperStateLex
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant RDoc::RipperStateLex
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# cannot load such file -- rake
# cannot load such file -- rake
# uninitialized constant REXML
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant REXML
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:CparseParams>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name send_body
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name send_headers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name serve
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shutdown
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name valid_options
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Generator>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UploadedFile>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dump
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name content_type
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name content_type=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name local_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name method_missing
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name original_filename
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name respond_to?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:AuthenticityToken>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ContentSecurityPolicy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CookieTossing>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:EscapedParams>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:FormToken>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:HttpOrigin>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:IPSpoofing>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:JsonCsrf>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:PathTraversal>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ReferrerPolicy>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RemoteReferrer>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RemoteToken>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SessionHijacking>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:StrictTransport>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:XSSHeader>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::AuthenticityToken::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mask_authenticity_token
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name random_token
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name token
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::ContentSecurityPolicy::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name csp_policy
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::CookieTossing::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bad_cookies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cookie_paths
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name empty_cookie
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name redirect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name remove_bad_cookies
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name session_key
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::EscapedParams::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name escape_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name handle
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::FormToken::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::FormToken::TOKEN_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::HttpOrigin::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rack::Protection::HttpOrigin::DEFAULT_PORTS
# wrong constant name base_url
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::IPSpoofing::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::JsonCsrf::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name close_body
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name has_vector?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name react_and_close
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::PathTraversal::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cleanup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::ReferrerPolicy::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::RemoteReferrer::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::RemoteToken::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::RemoteToken::TOKEN_LENGTH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::SessionHijacking::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::StrictTransport::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name strict_transport
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Protection::XSSHeader::DEFAULT_OPTIONS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Request::DEFAULT_PORTS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Request::FORM_DATA_MEDIA_TYPES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PROTO
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_PROTO
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PROTO
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_PROTO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_SSL
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PROTO
# uninitialized constant Rack::Request::HTTP_X_FORWARDED_SSL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rack::Request::HTTP_X_FORWARDED_FOR
#                Rack::Request::HTTP_X_FORWARDED_PORT
#                Rack::Request::HTTP_X_FORWARDED_HOST
#                Rack::Request::HTTP_X_FORWARDED_PROTO
#                Rack::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Rack::Request::PARSEABLE_DATA_MEDIA_TYPES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name !
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name !=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name __id__
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name equal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ractor
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Random::Base::ALPHANUMERIC
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Numeric
# wrong constant name bytes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name seed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bytes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name seed
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name %
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name entries
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_a
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name expand
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fire_update!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ruby
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extract_resources
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lazy_initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name lazy_initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Resolv::DNS::Resource::LOC::ClassHash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Resolv::DNS::Resource::LOC::ClassInsensitiveTypes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Resolv::DNS::Resource::LOC::ClassValue
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Resolv::DNS::Resource::LOC::ClassHash
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allocate_request_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bind_random_port
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name free_request_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name random
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rinda
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Rinda
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name node_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretty_print_children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name script_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name script_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pause
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name resume
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset_stats!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name runtime_stats
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name simulate_oom!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name stats_enabled?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keep_script_lines
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name keep_script_lines=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ListNode>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RubyNode>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:StringNode>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TagNode>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TextNode>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name accept
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name accept
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name code
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name accept
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name str
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name accept
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attrs
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name accept
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_outfile
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_ruby
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name write
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:CharsetPattern>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DefaultPattern>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:NegatedCharsetPattern>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:State>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Transition>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name chars
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matches?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matches?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name []
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name is_terminal
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name terminal?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name transitions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name advance_count
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name input
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name matches?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name to_state
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:EOFError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TransitionError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name advance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name source_buffer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TagMismatchError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:UnexpectedTokenError>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rux::RubyLexer::ESCAPES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rux::RubyLexer::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rux::RubyLexer::KEYWORDS_BEGIN
# uninitialized constant Rux::RubyLexer::KEYWORDS_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rux::RubyLexer::LEX_STATES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rux::RubyLexer::PUNCTUATION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Rux::RubyLexer::PUNCTUATION_BEGIN
# uninitialized constant Rux::RubyLexer::PUNCTUATION_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Rux::RubyLexer::REGEXP_META_CHARACTERS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name advance_orig
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name next_lexer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name advance
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name next_lexer
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset_to
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse_pattern
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_table
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name state_table_path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attr_to_hash_elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name visit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name visit_children
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name visit_list
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name visit_ruby
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name visit_string
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name visit_tag
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name visit_text
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant SDBM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant SDBM
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant SDBMError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant SDBMError
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Scanf
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Scanf
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <=>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ==
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ===
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name divide
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eql?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name flatten_merge
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretty_print
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name pretty_print_cycle
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reset
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Shell
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Shell
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# wrong constant name <Class:Extension>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Reloader>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:TestHelpers>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reloader
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reloader=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name reloader?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Base::COMMON_SEP
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::CommonLogger
# uninitialized constant Sinatra::Base::DEFAULT_SEP
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Base::ESCAPE_HTML
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Base::ESCAPE_HTML_PATTERN
# uninitialized constant Sinatra::Base::ESCAPE_HTML_PATTERN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Base::ETAG_KINDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Base::HTTP_STATUS_CODES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Base::NULL_BYTE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Base::PATH_SEPS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Pathname
# uninitialized constant Sinatra::Base::RFC2822_DAY_NAME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Base::RFC2822_MONTH_NAME
# uninitialized constant Sinatra::Base::RFC2822_MONTH_NAME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Base::RFC2822_DAY_NAME
# uninitialized constant Sinatra::Base::STATUS_WITH_NO_ENTITY_BODY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Base::SYMBOL_TO_STATUS_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:DontCall>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name configure
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name registered
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name settings
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inspect
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:BaseMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ExtensionMethods>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Watcher>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name after_reload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name add_filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name compile!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name error
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inherited
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inline_templates=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name run!
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name also_reload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deactivate
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dont_reload
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Element>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:List>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name elements
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ignore
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ignore?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name inline_templates?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mtime
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name path
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name removed?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name update
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name updated?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ignore
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name updated
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name watch
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name watch_file
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name watcher_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name watchers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name perform
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name registered
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Request::ALLOWED_SCHEMES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Request::DEFAULT_PORTS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Request::FORM_DATA_MEDIA_TYPES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Request::HTTP_X_FORWARDED_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Request::HTTP_X_FORWARDED_SSL
#                Sinatra::Request::HTTP_X_FORWARDED_PORT
#                Sinatra::Request::HTTP_X_FORWARDED_HOST
#                Sinatra::Request::HTTP_X_FORWARDED_PROTO
# uninitialized constant Sinatra::Request::HTTP_X_FORWARDED_HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Request::HTTP_X_FORWARDED_FOR
#                Sinatra::Request::HTTP_X_FORWARDED_SSL
#                Sinatra::Request::HTTP_X_FORWARDED_PORT
#                Sinatra::Request::HTTP_X_FORWARDED_PROTO
#                Sinatra::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Sinatra::Request::HTTP_X_FORWARDED_PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Request::HTTP_X_FORWARDED_FOR
#                Sinatra::Request::HTTP_X_FORWARDED_SSL
#                Sinatra::Request::HTTP_X_FORWARDED_HOST
#                Sinatra::Request::HTTP_X_FORWARDED_PROTO
#                Sinatra::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Sinatra::Request::HTTP_X_FORWARDED_PROTO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Request::HTTP_X_FORWARDED_FOR
#                Sinatra::Request::HTTP_X_FORWARDED_SSL
#                Sinatra::Request::HTTP_X_FORWARDED_PORT
#                Sinatra::Request::HTTP_X_FORWARDED_HOST
#                Sinatra::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Sinatra::Request::HTTP_X_FORWARDED_SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Request::HTTP_X_FORWARDED_FOR
#                Sinatra::Request::HTTP_X_FORWARDED_SSL
#                Sinatra::Request::HTTP_X_FORWARDED_PORT
#                Sinatra::Request::HTTP_X_FORWARDED_HOST
#                Sinatra::Request::HTTP_X_FORWARDED_PROTO
# uninitialized constant Sinatra::Request::HTTP_X_FORWARDED_SSL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::Request::HTTP_X_FORWARDED_FOR
#                Sinatra::Request::HTTP_X_FORWARDED_PORT
#                Sinatra::Request::HTTP_X_FORWARDED_HOST
#                Sinatra::Request::HTTP_X_FORWARDED_PROTO
#                Sinatra::Request::HTTP_X_FORWARDED_SCHEME
# uninitialized constant Sinatra::Request::PARSEABLE_DATA_MEDIA_TYPES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Request::SCHEME_WHITELIST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Response::CHUNKED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::Response::STATUS_WITH_NO_ENTITY_BODY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::ShowExceptions::CONTEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::ContentFor
# wrong constant name <Class:Session>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name app
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name app=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name body
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name build_rack_test_session
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name configure
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name cookie_jar
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name disable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name enable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name env_for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name errors
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name headers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name helpers
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name last_env
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name last_request?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name mock_app
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name session
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_app
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name settings
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name settings=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name status
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name use
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::TestHelpers::Session::COMMON_SEP
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::CommonLogger
# uninitialized constant Sinatra::TestHelpers::Session::DEFAULT_SEP
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::TestHelpers::Session::ESCAPE_HTML
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::TestHelpers::Session::ESCAPE_HTML_PATTERN
# uninitialized constant Sinatra::TestHelpers::Session::ESCAPE_HTML_PATTERN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::TestHelpers::Session::HTTP_STATUS_CODES
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::TestHelpers::Session::NULL_BYTE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::TestHelpers::Session::PATH_SEPS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Pathname
# uninitialized constant Sinatra::TestHelpers::Session::RFC2822_DAY_NAME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::TestHelpers::Session::RFC2822_MONTH_NAME
# uninitialized constant Sinatra::TestHelpers::Session::RFC2822_MONTH_NAME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Sinatra::TestHelpers::Session::RFC2822_DAY_NAME
# uninitialized constant Sinatra::TestHelpers::Session::STATUS_WITH_NO_ENTITY_BODY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sinatra::TestHelpers::Session::SYMBOL_TO_STATUS_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name global_env
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::APPEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::BINARY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::CREAT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::DSYNC
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Async
#                Socket::SYNC
# uninitialized constant Socket::EXCL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::FNM_CASEFOLD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::FNM_SYSCASE
# uninitialized constant Socket::FNM_DOTMATCH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::FNM_EXTGLOB
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::FNM_NOESCAPE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::FNM_CASEFOLD
# uninitialized constant Socket::FNM_PATHNAME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::FNM_SHORTNAME
# uninitialized constant Socket::FNM_SHORTNAME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::FNM_SYSCASE
# uninitialized constant Socket::FNM_SYSCASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::FNM_CASEFOLD
# uninitialized constant Socket::LOCK_EX
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_UN
#                Socket::LOCK_SH
# uninitialized constant Socket::LOCK_NB
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::LOCK_UN
#                Socket::LOCK_EX
#                Socket::LOCK_SH
# uninitialized constant Socket::LOCK_SH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_UN
#                Socket::LOCK_EX
# uninitialized constant Socket::LOCK_UN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_EX
#                Socket::LOCK_SH
# uninitialized constant Socket::NOCTTY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::NOFOLLOW
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::NONBLOCK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::NULL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::PRIORITY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::RDONLY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::WRONLY
# uninitialized constant Socket::RDWR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::READABLE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Forwardable
# uninitialized constant Socket::SEEK_CUR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::SEEK_END
# uninitialized constant Socket::SEEK_DATA
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::SEEK_SET
# uninitialized constant Socket::SEEK_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::SEEK_SET
# uninitialized constant Socket::SEEK_HOLE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::SEEK_END
# uninitialized constant Socket::SEEK_SET
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::SEEK_END
# uninitialized constant Socket::SHARE_DELETE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::SYNC
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Async
#                Socket::DSYNC
# uninitialized constant Socket::TRUNC
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Socket::WRITABLE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::WaitWritable
# uninitialized constant Socket::WRONLY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Socket::RDONLY
# wrong constant name parse_csv
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shellescape
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name shellsplit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_encoding_by_bom
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name bol?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name fixed_anchor?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deconstruct
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name deconstruct_keys
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:Struct>
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name name
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Sync
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Async
# uninitialized constant Sync
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Async
# uninitialized constant Sync_m
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Sync_m
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Syslog
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Syslog
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name T.noreturn
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name T.noreturn
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name T.untyped
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:Remover>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant VERSION
# 
#     ::Object.const_get(n)
#             ^^^^^^^^^^
# wrong constant name _close
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name call
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name native_thread_id
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name limit
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ignore_deadlock
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name ignore_deadlock=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant ThreadsWait
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant ThreadsWait
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name <Class:CSVTemplate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:ERBTemplate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:EtanniTemplate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:PlainTemplate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:RDocTemplate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:SigilTemplate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:StringTemplate>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled_template
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name engine
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled_postamble
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled_preamble
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled_template
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_output_variable
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name default_output_variable=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled_template
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allows_script?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name markup
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allows_script?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name precompiled_template
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name eval_script
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name instruction_sequence
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parameters
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name allow_reentry
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name new
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Tracer
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Traces
# uninitialized constant Tracer
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  Traces
# wrong constant name <Class:File>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <Class:WS>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::Escape
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  URI::ESCAPED
# uninitialized constant URI::Escape
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# Did you mean?  URI::ESCAPED
# wrong constant name new2
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::File::ABS_URI_REF
# uninitialized constant URI::File::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::File::DEFAULT_PORT
# uninitialized constant URI::File::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::File::REL_URI_REF
# uninitialized constant URI::File::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::File::RFC3986_Parser
#                URI::RFC3986_Parser
#                URI::File::RFC2396_Parser
#                URI::RFC2396_Parser
# uninitialized constant URI::File::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::File::TBLENCWWWCOMP_
#                URI::TBLENCWWWCOMP_
# uninitialized constant URI::File::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::File::TBLDECWWWCOMP_
#                URI::TBLDECWWWCOMP_
# uninitialized constant URI::File::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::File::VERSION_CODE
# uninitialized constant URI::File::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::File::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name check_password
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_user
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name check_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_userinfo
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name authority
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name origin
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name attributes=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name dn=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name extensions=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name filter=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name scope=
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_attributes
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_dn
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_extensions
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_filter
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name set_scope
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name join
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name parse
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name regexp
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name split
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name make_components_hash
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::ABS_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::ABS_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::WS::ABS_URI_REF
# uninitialized constant URI::WS::ABS_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::DEFAULT_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::WS::DEFAULT_PORT
# uninitialized constant URI::WS::ESCAPED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::FRAGMENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::HOST
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::OPAQUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::PORT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::QUERY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::REL_PATH
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::REL_URI
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::WS::REL_URI_REF
# uninitialized constant URI::WS::REL_URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::RFC3986_PARSER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::WS::RFC3986_Parser
#                URI::RFC3986_Parser
#                URI::WS::RFC2396_Parser
#                URI::RFC2396_Parser
# uninitialized constant URI::WS::SCHEME
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::TBLDECWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::WS::TBLENCWWWCOMP_
#                URI::TBLENCWWWCOMP_
# uninitialized constant URI::WS::TBLENCWWWCOMP_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::WS::TBLDECWWWCOMP_
#                URI::TBLDECWWWCOMP_
# uninitialized constant URI::WS::UNSAFE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::URI_REF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::USERINFO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::USE_REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::VERSION
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  URI::WS::VERSION_CODE
# uninitialized constant URI::WS::VERSION_CODE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant URI::WS::WEB_ENCODINGS_
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# wrong constant name request_uri
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name for
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name get_encoding
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name register_scheme
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name private?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name protected?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name public?
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::AST::Enumerator::Elem
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Begin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Case
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::SClass
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
# uninitialized constant Unparser::Emitter::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
# uninitialized constant Unparser::Emitter::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
#                Unparser::Emitter::K_AND
# uninitialized constant Unparser::Emitter::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_ELSIF
# uninitialized constant Unparser::Emitter::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
# uninitialized constant Unparser::Emitter::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IN
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
# uninitialized constant Unparser::Emitter::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_THEN
# uninitialized constant Unparser::Emitter::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Undef
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::K_THEN
# uninitialized constant Unparser::Emitter::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Assignment::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Assignment::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Assignment::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Assignment::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Assignment::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Assignment::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Assignment::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Assignment::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Assignment::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Assignment::K_FALSE
#                Unparser::Emitter::Assignment::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Assignment::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Assignment::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Assignment::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Assignment::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Assignment::K_DO
#                Unparser::Emitter::Assignment::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Assignment::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Assignment::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Assignment::K_DEFINED
# uninitialized constant Unparser::Emitter::Assignment::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Assignment::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Assignment::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_OR
# uninitialized constant Unparser::Emitter::Assignment::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Assignment::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Assignment::K_END
# uninitialized constant Unparser::Emitter::Assignment::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Assignment::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Assignment::K_FALSE
# uninitialized constant Unparser::Emitter::Assignment::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Assignment::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Assignment::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Assignment::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Assignment::K_EEND
# uninitialized constant Unparser::Emitter::Assignment::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Assignment::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Assignment::K_FILE
#                Unparser::Emitter::Assignment::K_ELSE
#                Unparser::Emitter::Assignment::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Assignment::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Assignment::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Assignment::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Assignment::K_FALSE
# uninitialized constant Unparser::Emitter::Assignment::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Assignment::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Assignment::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Assignment::K_IF
# uninitialized constant Unparser::Emitter::Assignment::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Assignment::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Assignment::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Assignment::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Assignment::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Assignment::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Assignment::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Assignment::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Assignment::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Assignment::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Assignment::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Assignment::Rescue
# uninitialized constant Unparser::Emitter::Assignment::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Assignment::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Assignment::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Assignment::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Assignment::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Assignment::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_THEN
# uninitialized constant Unparser::Emitter::Assignment::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Assignment::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Assignment::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_UNDEF
# uninitialized constant Unparser::Emitter::Assignment::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Assignment::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Assignment::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Assignment::K_THEN
# uninitialized constant Unparser::Emitter::Assignment::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Assignment::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Assignment::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Assignment::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Assignment::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Assignment::BINARY_OPERATOR
#                Unparser::Emitter::Assignment::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::BinaryAssign::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::BinaryAssign::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::BinaryAssign::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::BinaryAssign::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::BinaryAssign::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::BinaryAssign::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::BinaryAssign::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::BinaryAssign::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::BinaryAssign::K_FALSE
#                Unparser::Emitter::BinaryAssign::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::BinaryAssign::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::BinaryAssign::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::BinaryAssign::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::BinaryAssign::K_DO
#                Unparser::Emitter::BinaryAssign::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::BinaryAssign::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::BinaryAssign::K_DEFINED
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::BinaryAssign::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_OR
# uninitialized constant Unparser::Emitter::BinaryAssign::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::BinaryAssign::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::BinaryAssign::K_END
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::BinaryAssign::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::BinaryAssign::K_FALSE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::BinaryAssign::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::BinaryAssign::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::BinaryAssign::K_EEND
# uninitialized constant Unparser::Emitter::BinaryAssign::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::BinaryAssign::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::BinaryAssign::K_FILE
#                Unparser::Emitter::BinaryAssign::K_ELSE
#                Unparser::Emitter::BinaryAssign::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::BinaryAssign::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::BinaryAssign::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::BinaryAssign::K_FALSE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::BinaryAssign::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::BinaryAssign::K_IF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::BinaryAssign::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::BinaryAssign::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::BinaryAssign::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::BinaryAssign::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::BinaryAssign::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::BinaryAssign::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::BinaryAssign::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::BinaryAssign::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::BinaryAssign::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::BinaryAssign::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::BinaryAssign::Rescue
# uninitialized constant Unparser::Emitter::BinaryAssign::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::BinaryAssign::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::BinaryAssign::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_THEN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::BinaryAssign::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_UNDEF
# uninitialized constant Unparser::Emitter::BinaryAssign::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::BinaryAssign::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::BinaryAssign::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::BinaryAssign::K_THEN
# uninitialized constant Unparser::Emitter::BinaryAssign::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::BinaryAssign::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::BinaryAssign::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::BinaryAssign::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::BinaryAssign::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::BinaryAssign::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::CaseGuard::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::CaseGuard::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::CaseGuard::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::CaseGuard::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::CaseGuard::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::CaseGuard::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::CaseGuard::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::CaseGuard::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::CaseGuard::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Case
#                Unparser::Emitter::CaseGuard::K_FALSE
#                Unparser::Emitter::CaseGuard::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::CaseGuard::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::CaseGuard::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::CaseGuard::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::CaseGuard::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::CaseGuard::K_DO
#                Unparser::Emitter::CaseGuard::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::CaseGuard::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::CaseGuard::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::CaseGuard::K_DEFINED
# uninitialized constant Unparser::Emitter::CaseGuard::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::CaseGuard::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::CaseGuard::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_OR
# uninitialized constant Unparser::Emitter::CaseGuard::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::CaseGuard::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::CaseGuard::K_END
# uninitialized constant Unparser::Emitter::CaseGuard::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::CaseGuard::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::CaseGuard::K_FALSE
# uninitialized constant Unparser::Emitter::CaseGuard::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::CaseGuard::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::CaseGuard::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::CaseGuard::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::CaseGuard::K_EEND
# uninitialized constant Unparser::Emitter::CaseGuard::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::CaseGuard::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::CaseGuard::K_FILE
#                Unparser::Emitter::CaseGuard::K_ELSE
#                Unparser::Emitter::CaseGuard::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::CaseGuard::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::CaseGuard::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::CaseGuard::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::CaseGuard::K_FALSE
# uninitialized constant Unparser::Emitter::CaseGuard::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::CaseGuard::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::CaseGuard::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::CaseGuard::K_IF
# uninitialized constant Unparser::Emitter::CaseGuard::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::CaseGuard::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::CaseGuard::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::CaseGuard::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::CaseGuard::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::CaseGuard::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::CaseGuard::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::CaseGuard::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::CaseGuard::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::CaseGuard::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::CaseGuard::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::CaseGuard::Rescue
# uninitialized constant Unparser::Emitter::CaseGuard::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::CaseGuard::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::CaseGuard::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::CaseGuard::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::CaseGuard::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::CaseGuard::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_THEN
# uninitialized constant Unparser::Emitter::CaseGuard::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::CaseGuard::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::CaseGuard::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_UNDEF
# uninitialized constant Unparser::Emitter::CaseGuard::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::CaseGuard::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::CaseGuard::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::CaseGuard::K_THEN
# uninitialized constant Unparser::Emitter::CaseGuard::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::CaseGuard::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::CaseGuard::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::CaseGuard::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::CaseGuard::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::CaseGuard::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::FlipFlop::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::FlipFlop::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::FlipFlop::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::FlipFlop::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::FlipFlop::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::FlipFlop::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::FlipFlop::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::FlipFlop::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::FlipFlop::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::FlipFlop::K_FALSE
#                Unparser::Emitter::FlipFlop::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::FlipFlop::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::FlipFlop::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::FlipFlop::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::FlipFlop::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::FlipFlop::K_DO
#                Unparser::Emitter::FlipFlop::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::FlipFlop::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::FlipFlop::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::FlipFlop::K_DEFINED
# uninitialized constant Unparser::Emitter::FlipFlop::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::FlipFlop::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::FlipFlop::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_OR
# uninitialized constant Unparser::Emitter::FlipFlop::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::FlipFlop::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::FlipFlop::K_END
# uninitialized constant Unparser::Emitter::FlipFlop::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::FlipFlop::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::FlipFlop::K_FALSE
# uninitialized constant Unparser::Emitter::FlipFlop::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::FlipFlop::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::FlipFlop::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::FlipFlop::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::FlipFlop::K_EEND
# uninitialized constant Unparser::Emitter::FlipFlop::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::FlipFlop::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::FlipFlop::K_FILE
#                Unparser::Emitter::FlipFlop::K_ELSE
#                Unparser::Emitter::FlipFlop::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::FlipFlop::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::FlipFlop::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::FlipFlop::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::FlipFlop::K_FALSE
# uninitialized constant Unparser::Emitter::FlipFlop::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::FlipFlop::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::FlipFlop::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::FlipFlop::K_IF
# uninitialized constant Unparser::Emitter::FlipFlop::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::FlipFlop::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::FlipFlop::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::FlipFlop::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::FlipFlop::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::FlipFlop::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::FlipFlop::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::FlipFlop::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::FlipFlop::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::FlipFlop::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::FlipFlop::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::FlipFlop::Rescue
# uninitialized constant Unparser::Emitter::FlipFlop::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::FlipFlop::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::FlipFlop::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::FlipFlop::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::FlipFlop::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::FlipFlop::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_THEN
# uninitialized constant Unparser::Emitter::FlipFlop::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::FlipFlop::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::FlipFlop::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_UNDEF
# uninitialized constant Unparser::Emitter::FlipFlop::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::FlipFlop::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::FlipFlop::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::FlipFlop::K_THEN
# uninitialized constant Unparser::Emitter::FlipFlop::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::FlipFlop::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::FlipFlop::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::FlipFlop::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::FlipFlop::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::FlipFlop::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Float::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Float::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Float::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Float::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Float::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Float::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Float::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Float::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Float::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Float::K_FALSE
#                Unparser::Emitter::Float::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Float::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Float::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Float::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Float::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Float::K_DO
#                Unparser::Emitter::Float::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Float::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Float::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Float::K_DEFINED
# uninitialized constant Unparser::Emitter::Float::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Float::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Float::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_OR
# uninitialized constant Unparser::Emitter::Float::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Float::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Float::K_END
# uninitialized constant Unparser::Emitter::Float::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Float::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Float::K_FALSE
# uninitialized constant Unparser::Emitter::Float::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Float::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Float::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Float::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Float::K_EEND
# uninitialized constant Unparser::Emitter::Float::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Float::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Float::K_FILE
#                Unparser::Emitter::Float::K_ELSE
#                Unparser::Emitter::Float::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Float::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Float::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Float::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Float::K_FALSE
# uninitialized constant Unparser::Emitter::Float::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Float::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Float::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Float::K_IF
# uninitialized constant Unparser::Emitter::Float::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Float::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Float::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Float::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Float::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Float::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Float::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Float::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Float::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Float::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Float::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Float::Rescue
# uninitialized constant Unparser::Emitter::Float::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Float::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Float::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Float::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Float::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Float::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_THEN
# uninitialized constant Unparser::Emitter::Float::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Float::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Float::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_UNDEF
# uninitialized constant Unparser::Emitter::Float::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Float::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Float::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Float::K_THEN
# uninitialized constant Unparser::Emitter::Float::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Float::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Float::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Float::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Float::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Float::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Hookexe::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Hookexe::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Hookexe::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Hookexe::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Hookexe::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Hookexe::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Hookexe::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Hookexe::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Hookexe::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Hookexe::K_FALSE
#                Unparser::Emitter::Hookexe::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Hookexe::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Hookexe::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Hookexe::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Hookexe::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Hookexe::K_DO
#                Unparser::Emitter::Hookexe::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Hookexe::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Hookexe::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Hookexe::K_DEFINED
# uninitialized constant Unparser::Emitter::Hookexe::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Hookexe::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Hookexe::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_OR
# uninitialized constant Unparser::Emitter::Hookexe::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Hookexe::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Hookexe::K_END
# uninitialized constant Unparser::Emitter::Hookexe::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Hookexe::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Hookexe::K_FALSE
# uninitialized constant Unparser::Emitter::Hookexe::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Hookexe::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Hookexe::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Hookexe::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Hookexe::K_EEND
# uninitialized constant Unparser::Emitter::Hookexe::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Hookexe::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Hookexe::K_FILE
#                Unparser::Emitter::Hookexe::K_ELSE
#                Unparser::Emitter::Hookexe::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Hookexe::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Hookexe::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Hookexe::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Hookexe::K_FALSE
# uninitialized constant Unparser::Emitter::Hookexe::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Hookexe::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Hookexe::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Hookexe::K_IF
# uninitialized constant Unparser::Emitter::Hookexe::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Hookexe::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Hookexe::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Hookexe::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Hookexe::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Hookexe::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Hookexe::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Hookexe::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Hookexe::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Hookexe::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Hookexe::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Hookexe::Rescue
# uninitialized constant Unparser::Emitter::Hookexe::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Hookexe::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Hookexe::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Hookexe::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Hookexe::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Hookexe::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_THEN
# uninitialized constant Unparser::Emitter::Hookexe::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Hookexe::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Hookexe::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_UNDEF
# uninitialized constant Unparser::Emitter::Hookexe::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Hookexe::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Hookexe::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Hookexe::K_THEN
# uninitialized constant Unparser::Emitter::Hookexe::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Hookexe::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Hookexe::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Hookexe::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Hookexe::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Hookexe::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::MatchPattern::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::MatchPattern::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::MatchPattern::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::MatchPattern::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::MatchPattern::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::MatchPattern::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::MatchPattern::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::MatchPattern::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::MatchPattern::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::MatchPattern::K_FALSE
#                Unparser::Emitter::MatchPattern::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::MatchPattern::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::MatchPattern::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::MatchPattern::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::MatchPattern::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::MatchPattern::K_DO
#                Unparser::Emitter::MatchPattern::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::MatchPattern::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::MatchPattern::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::MatchPattern::K_DEFINED
# uninitialized constant Unparser::Emitter::MatchPattern::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::MatchPattern::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::MatchPattern::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_OR
# uninitialized constant Unparser::Emitter::MatchPattern::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::MatchPattern::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::MatchPattern::K_END
# uninitialized constant Unparser::Emitter::MatchPattern::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::MatchPattern::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::MatchPattern::K_FALSE
# uninitialized constant Unparser::Emitter::MatchPattern::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::MatchPattern::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::MatchPattern::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::MatchPattern::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::MatchPattern::K_EEND
# uninitialized constant Unparser::Emitter::MatchPattern::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::MatchPattern::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::MatchPattern::K_FILE
#                Unparser::Emitter::MatchPattern::K_ELSE
#                Unparser::Emitter::MatchPattern::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::MatchPattern::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::MatchPattern::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::MatchPattern::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::MatchPattern::K_FALSE
# uninitialized constant Unparser::Emitter::MatchPattern::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::MatchPattern::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::MatchPattern::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::MatchPattern::K_IF
# uninitialized constant Unparser::Emitter::MatchPattern::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::MatchPattern::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::MatchPattern::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::MatchPattern::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::MatchPattern::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::MatchPattern::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::MatchPattern::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::MatchPattern::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::MatchPattern::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::MatchPattern::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::MatchPattern::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::MatchPattern::Rescue
# uninitialized constant Unparser::Emitter::MatchPattern::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::MatchPattern::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::MatchPattern::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::MatchPattern::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::MatchPattern::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::MatchPattern::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_THEN
# uninitialized constant Unparser::Emitter::MatchPattern::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::MatchPattern::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::MatchPattern::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_UNDEF
# uninitialized constant Unparser::Emitter::MatchPattern::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::MatchPattern::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::MatchPattern::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::MatchPattern::K_THEN
# uninitialized constant Unparser::Emitter::MatchPattern::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::MatchPattern::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::MatchPattern::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::MatchPattern::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::MatchPattern::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::MatchPattern::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Morearg::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Morearg::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Morearg::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Morearg::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Morearg::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Morearg::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Morearg::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Morearg::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Morearg::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Morearg::K_FALSE
#                Unparser::Emitter::Morearg::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Morearg::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Morearg::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Morearg::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Morearg::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Morearg::K_DO
#                Unparser::Emitter::Morearg::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Morearg::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Morearg::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Morearg::K_DEFINED
# uninitialized constant Unparser::Emitter::Morearg::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Morearg::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Morearg::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_OR
# uninitialized constant Unparser::Emitter::Morearg::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Morearg::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Morearg::K_END
# uninitialized constant Unparser::Emitter::Morearg::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Morearg::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Morearg::K_FALSE
# uninitialized constant Unparser::Emitter::Morearg::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Morearg::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Morearg::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Morearg::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Morearg::K_EEND
# uninitialized constant Unparser::Emitter::Morearg::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Morearg::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Morearg::K_FILE
#                Unparser::Emitter::Morearg::K_ELSE
#                Unparser::Emitter::Morearg::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Morearg::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Morearg::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Morearg::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Morearg::K_FALSE
# uninitialized constant Unparser::Emitter::Morearg::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Morearg::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Morearg::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Morearg::K_IF
# uninitialized constant Unparser::Emitter::Morearg::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Morearg::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Morearg::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Morearg::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Morearg::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Morearg::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Morearg::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Morearg::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Morearg::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Morearg::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Morearg::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Morearg::Rescue
# uninitialized constant Unparser::Emitter::Morearg::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Morearg::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Morearg::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Morearg::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Morearg::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Morearg::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_THEN
# uninitialized constant Unparser::Emitter::Morearg::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Morearg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Morearg::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_UNDEF
# uninitialized constant Unparser::Emitter::Morearg::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Morearg::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Morearg::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Morearg::K_THEN
# uninitialized constant Unparser::Emitter::Morearg::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Morearg::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Morearg::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Morearg::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Morearg::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Morearg::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::NthRef::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::NthRef::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::NthRef::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::NthRef::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::NthRef::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::NthRef::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::NthRef::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::NthRef::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::NthRef::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::NthRef::K_FALSE
#                Unparser::Emitter::NthRef::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::NthRef::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::NthRef::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::NthRef::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::NthRef::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::NthRef::K_DO
#                Unparser::Emitter::NthRef::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::NthRef::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::NthRef::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::NthRef::K_DEFINED
# uninitialized constant Unparser::Emitter::NthRef::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::NthRef::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::NthRef::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_OR
# uninitialized constant Unparser::Emitter::NthRef::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::NthRef::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::NthRef::K_END
# uninitialized constant Unparser::Emitter::NthRef::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::NthRef::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::NthRef::K_FALSE
# uninitialized constant Unparser::Emitter::NthRef::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::NthRef::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::NthRef::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::NthRef::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::NthRef::K_EEND
# uninitialized constant Unparser::Emitter::NthRef::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::NthRef::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::NthRef::K_FILE
#                Unparser::Emitter::NthRef::K_ELSE
#                Unparser::Emitter::NthRef::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::NthRef::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::NthRef::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::NthRef::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::NthRef::K_FALSE
# uninitialized constant Unparser::Emitter::NthRef::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::NthRef::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::NthRef::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::NthRef::K_IF
# uninitialized constant Unparser::Emitter::NthRef::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::NthRef::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::NthRef::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::NthRef::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::NthRef::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::NthRef::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::NthRef::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::NthRef::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::NthRef::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::NthRef::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::NthRef::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::NthRef::Rescue
# uninitialized constant Unparser::Emitter::NthRef::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::NthRef::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::NthRef::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::NthRef::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::NthRef::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::NthRef::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_THEN
# uninitialized constant Unparser::Emitter::NthRef::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::NthRef::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::NthRef::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_UNDEF
# uninitialized constant Unparser::Emitter::NthRef::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::NthRef::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::NthRef::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::NthRef::K_THEN
# uninitialized constant Unparser::Emitter::NthRef::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::NthRef::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::NthRef::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::NthRef::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::NthRef::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::NthRef::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Post::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Post::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Post::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Post::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Post::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Post::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Post::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Post::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Post::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Post::K_FALSE
#                Unparser::Emitter::Post::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Post::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Post::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Post::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Post::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Post::K_DO
#                Unparser::Emitter::Post::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Post::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Post::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Post::K_DEFINED
# uninitialized constant Unparser::Emitter::Post::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Post::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Post::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_OR
# uninitialized constant Unparser::Emitter::Post::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Post::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Post::K_END
# uninitialized constant Unparser::Emitter::Post::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Post::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Post::K_FALSE
# uninitialized constant Unparser::Emitter::Post::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Post::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Post::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Post::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Post::K_EEND
# uninitialized constant Unparser::Emitter::Post::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Post::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Post::K_FILE
#                Unparser::Emitter::Post::K_ELSE
#                Unparser::Emitter::Post::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Post::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Post::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Post::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Post::K_FALSE
# uninitialized constant Unparser::Emitter::Post::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Post::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Post::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Post::K_IF
# uninitialized constant Unparser::Emitter::Post::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Post::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Post::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Post::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Post::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Post::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Post::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Post::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Post::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Post::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Post::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Post::Rescue
# uninitialized constant Unparser::Emitter::Post::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Post::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Post::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Post::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Post::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Post::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_THEN
# uninitialized constant Unparser::Emitter::Post::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Post::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Post::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_UNDEF
# uninitialized constant Unparser::Emitter::Post::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Post::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Post::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Post::K_THEN
# uninitialized constant Unparser::Emitter::Post::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Post::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Post::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Post::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Post::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Post::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Complex::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::UNARY_OPERATORS
#                Unparser::Emitter::Primitive::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Complex::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::Alias
#                Unparser::Emitter::Primitive::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_END
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Primitive::Complex::K_EEND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::Begin
#                Unparser::Emitter::Primitive::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Primitive::Complex::KWBegin
#                Unparser::Emitter::Primitive::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Case
#                Unparser::Emitter::Primitive::Complex::Case
#                Unparser::Emitter::Primitive::Case
#                Unparser::Emitter::Primitive::Complex::K_CLASS
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
#                Unparser::Emitter::Primitive::Complex::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::Class
#                Class
#                Unparser::Emitter::Class
#                Unparser::Emitter::Primitive::Class
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Primitive::SClass
#                Unparser::Emitter::Primitive::Complex::SClass
#                Unparser::Emitter::Primitive::Complex::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Primitive::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_DO
#                Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Complex::K_SELF
#                Unparser::Emitter::Primitive::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Primitive::K_UNDEF
#                Unparser::Emitter::K_UNDEF
#                Unparser::Emitter::Primitive::Complex::K_UNDEF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_DEFINED
#                Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Primitive::Complex::K_DEFINED
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::Defined
#                Unparser::Emitter::Primitive::Defined
#                Unparser::Emitter::Defined
#                Unparser::Emitter::Primitive::K_DEFINE
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::Complex::K_AND
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Primitive::Complex::K_END
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Primitive::Complex::K_ELSIF
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Primitive::Complex::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_ELSE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::Primitive::Complex::K_AND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Primitive::Complex::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_END
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Primitive::Complex::K_CASE
#                Unparser::Emitter::Primitive::Complex::K_FILE
#                Unparser::Emitter::Primitive::Complex::K_ELSE
#                Unparser::Emitter::Primitive::K_CASE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Primitive::Complex::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::Primitive::Complex::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Primitive::Complex::K_FALSE
#                Unparser::Emitter::Primitive::K_WHILE
#                Unparser::Emitter::Primitive::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_OR
#                Unparser::Emitter::Primitive::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_IF
#                Unparser::Emitter::Primitive::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::Module
#                Unparser::Emitter::Primitive::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_NOT
#                Unparser::Emitter::Primitive::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::Primitive::Complex::K_IN
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Primitive::Complex::K_FILE
#                Unparser::Emitter::K_UNTIL
#                Unparser::Emitter::Primitive::K_UNTIL
#                Unparser::Emitter::Primitive::Complex::K_UNTIL
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_NEXT
#                Unparser::Emitter::Primitive::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_FOR
#                Unparser::Emitter::Primitive::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Complex::K_DO
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rescue
#                Unparser::Emitter::Primitive::Complex::Rescue
#                Unparser::Emitter::Rescue
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_RETURN
#                Unparser::Emitter::Primitive::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_RETRY
#                Unparser::Emitter::K_RETRY
#                Unparser::Emitter::Primitive::Complex::K_RETRY
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_DEF
#                Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::Complex::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::Super
#                Unparser::Emitter::Primitive::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_WHEN
#                Unparser::Emitter::Primitive::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Undef
#                Unparser::Emitter::Primitive::Undef
#                Unparser::Emitter::Primitive::Complex::Undef
#                Unparser::Emitter::Primitive::K_DEF
#                Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::Complex::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_UNDEF
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_NIL
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Primitive::When
#                Unparser::Emitter::Primitive::Complex::When
#                Unparser::Emitter::Primitive::Complex::K_THEN
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Primitive::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::K_FILE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Primitive::Complex::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::Yield
#                Unparser::Emitter::Primitive::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Primitive::Complex::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Complex::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Complex::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Complex::BINARY_OPERATORS
#                Unparser::Emitter::Primitive::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Rational::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::UNARY_OPERATORS
#                Unparser::Emitter::Primitive::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Primitive::Rational::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::Alias
#                Unparser::Emitter::Primitive::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_END
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Primitive::Rational::K_EEND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::Begin
#                Unparser::Emitter::Primitive::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Primitive::Rational::KWBegin
#                Unparser::Emitter::Primitive::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Case
#                Unparser::Emitter::Primitive::Rational::Case
#                Unparser::Emitter::Primitive::Case
#                Unparser::Emitter::Primitive::Rational::K_CLASS
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
#                Unparser::Emitter::Primitive::Rational::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::Class
#                Class
#                Unparser::Emitter::Class
#                Unparser::Emitter::Primitive::Class
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Primitive::SClass
#                Unparser::Emitter::Primitive::Rational::SClass
#                Unparser::Emitter::Primitive::Rational::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::Primitive::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_DO
#                Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Rational::K_SELF
#                Unparser::Emitter::Primitive::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Primitive::K_UNDEF
#                Unparser::Emitter::K_UNDEF
#                Unparser::Emitter::Primitive::Rational::K_UNDEF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_DEFINED
#                Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Primitive::Rational::K_DEFINED
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::Defined
#                Unparser::Emitter::Primitive::Defined
#                Unparser::Emitter::Defined
#                Unparser::Emitter::Primitive::K_DEFINE
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::Rational::K_AND
#                Unparser::Emitter::Primitive::K_END
#                Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Primitive::Rational::K_END
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Primitive::Rational::K_ELSIF
#                Unparser::Emitter::Primitive::K_FALSE
#                Unparser::Emitter::Primitive::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Primitive::Rational::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_ELSE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Primitive::K_AND
#                Unparser::Emitter::Primitive::Rational::K_AND
#                Unparser::Emitter::Primitive::K_EEND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Primitive::Rational::K_EEND
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_END
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_FILE
#                Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Primitive::Rational::K_CASE
#                Unparser::Emitter::Primitive::Rational::K_FILE
#                Unparser::Emitter::Primitive::Rational::K_ELSE
#                Unparser::Emitter::Primitive::K_CASE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::Primitive::K_ELSE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Primitive::Rational::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::Primitive::Rational::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Primitive::Rational::K_FALSE
#                Unparser::Emitter::Primitive::K_WHILE
#                Unparser::Emitter::Primitive::K_FALSE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_OR
#                Unparser::Emitter::Primitive::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_IF
#                Unparser::Emitter::Primitive::K_IF
#                Unparser::Emitter::K_IF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::Module
#                Unparser::Emitter::Primitive::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_NOT
#                Unparser::Emitter::Primitive::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IN
#                Unparser::Emitter::Primitive::K_IN
#                Unparser::Emitter::Primitive::Rational::K_IN
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Primitive::Rational::K_FILE
#                Unparser::Emitter::K_UNTIL
#                Unparser::Emitter::Primitive::K_UNTIL
#                Unparser::Emitter::Primitive::Rational::K_UNTIL
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_NEXT
#                Unparser::Emitter::Primitive::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_FOR
#                Unparser::Emitter::Primitive::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Primitive::K_DO
#                Unparser::Emitter::Primitive::Rational::K_DO
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rescue
#                Unparser::Emitter::Primitive::Rational::Rescue
#                Unparser::Emitter::Rescue
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_RETURN
#                Unparser::Emitter::Primitive::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_RETRY
#                Unparser::Emitter::K_RETRY
#                Unparser::Emitter::Primitive::Rational::K_RETRY
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::K_DEF
#                Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::Rational::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::Super
#                Unparser::Emitter::Primitive::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_WHEN
#                Unparser::Emitter::Primitive::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Undef
#                Unparser::Emitter::Primitive::Undef
#                Unparser::Emitter::Primitive::Rational::Undef
#                Unparser::Emitter::Primitive::K_DEF
#                Unparser::Emitter::K_DEF
#                Unparser::Emitter::Primitive::Rational::K_DEF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_UNDEF
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_NIL
#                Unparser::Emitter::Primitive::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Primitive::When
#                Unparser::Emitter::Primitive::Rational::When
#                Unparser::Emitter::Primitive::Rational::K_THEN
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Primitive::K_THEN
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::K_FILE
#                Unparser::Emitter::Primitive::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Primitive::Rational::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::Yield
#                Unparser::Emitter::Primitive::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Primitive::Rational::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Rational::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Primitive::Rational::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Primitive::Rational::BINARY_OPERATORS
#                Unparser::Emitter::Primitive::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Procarg::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Procarg::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Procarg::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Procarg::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Procarg::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Procarg::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Procarg::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Procarg::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Procarg::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Procarg::K_FALSE
#                Unparser::Emitter::Procarg::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Procarg::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Procarg::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Procarg::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Procarg::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Procarg::K_DO
#                Unparser::Emitter::Procarg::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Procarg::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Procarg::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Procarg::K_DEFINED
# uninitialized constant Unparser::Emitter::Procarg::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Procarg::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Procarg::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_OR
# uninitialized constant Unparser::Emitter::Procarg::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Procarg::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Procarg::K_END
# uninitialized constant Unparser::Emitter::Procarg::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Procarg::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Procarg::K_FALSE
# uninitialized constant Unparser::Emitter::Procarg::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Procarg::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Procarg::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Procarg::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Procarg::K_EEND
# uninitialized constant Unparser::Emitter::Procarg::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Procarg::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Procarg::K_FILE
#                Unparser::Emitter::Procarg::K_ELSE
#                Unparser::Emitter::Procarg::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Procarg::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Procarg::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Procarg::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Procarg::K_FALSE
# uninitialized constant Unparser::Emitter::Procarg::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Procarg::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Procarg::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Procarg::K_IF
# uninitialized constant Unparser::Emitter::Procarg::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Procarg::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Procarg::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Procarg::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Procarg::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Procarg::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Procarg::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Procarg::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Procarg::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Procarg::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Procarg::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Procarg::Rescue
# uninitialized constant Unparser::Emitter::Procarg::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Procarg::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Procarg::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Procarg::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Procarg::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Procarg::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_THEN
# uninitialized constant Unparser::Emitter::Procarg::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Procarg::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Procarg::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_UNDEF
# uninitialized constant Unparser::Emitter::Procarg::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Procarg::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Procarg::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Procarg::K_THEN
# uninitialized constant Unparser::Emitter::Procarg::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Procarg::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Procarg::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Procarg::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Procarg::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Procarg::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Range::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Range::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Range::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Range::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Range::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Range::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Range::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Range::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Range::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Range::K_FALSE
#                Unparser::Emitter::Range::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Range::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Range::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Range::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Range::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Range::K_DO
#                Unparser::Emitter::Range::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Range::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Range::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Range::K_DEFINED
# uninitialized constant Unparser::Emitter::Range::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Range::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Range::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_OR
# uninitialized constant Unparser::Emitter::Range::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Range::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Range::K_END
# uninitialized constant Unparser::Emitter::Range::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Range::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Range::K_FALSE
# uninitialized constant Unparser::Emitter::Range::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Range::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Range::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Range::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Range::K_EEND
# uninitialized constant Unparser::Emitter::Range::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Range::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Range::K_FILE
#                Unparser::Emitter::Range::K_ELSE
#                Unparser::Emitter::Range::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Range::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Range::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Range::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Range::K_FALSE
# uninitialized constant Unparser::Emitter::Range::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Range::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Range::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Range::K_IF
# uninitialized constant Unparser::Emitter::Range::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Range::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Range::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Range::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Range::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Range::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Range::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Range::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Range::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Range::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Range::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Range::Rescue
# uninitialized constant Unparser::Emitter::Range::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Range::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Range::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Range::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Range::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Range::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_THEN
# uninitialized constant Unparser::Emitter::Range::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Range::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Range::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_UNDEF
# uninitialized constant Unparser::Emitter::Range::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Range::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Range::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Range::K_THEN
# uninitialized constant Unparser::Emitter::Range::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Range::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Range::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Range::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Range::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Range::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Repetition::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Repetition::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Repetition::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Repetition::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Repetition::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Repetition::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Repetition::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Repetition::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Repetition::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Repetition::K_FALSE
#                Unparser::Emitter::Repetition::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Repetition::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Repetition::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Repetition::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Repetition::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Repetition::K_DO
#                Unparser::Emitter::Repetition::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Repetition::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Repetition::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Repetition::K_DEFINED
# uninitialized constant Unparser::Emitter::Repetition::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Repetition::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Repetition::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_OR
# uninitialized constant Unparser::Emitter::Repetition::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Repetition::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Repetition::K_END
# uninitialized constant Unparser::Emitter::Repetition::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Repetition::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Repetition::K_FALSE
# uninitialized constant Unparser::Emitter::Repetition::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Repetition::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Repetition::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Repetition::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Repetition::K_EEND
# uninitialized constant Unparser::Emitter::Repetition::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Repetition::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Repetition::K_FILE
#                Unparser::Emitter::Repetition::K_ELSE
#                Unparser::Emitter::Repetition::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Repetition::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Repetition::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Repetition::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Repetition::K_FALSE
# uninitialized constant Unparser::Emitter::Repetition::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Repetition::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Repetition::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Repetition::K_IF
# uninitialized constant Unparser::Emitter::Repetition::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Repetition::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Repetition::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Repetition::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Repetition::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Repetition::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Repetition::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Repetition::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Repetition::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Repetition::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Repetition::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Repetition::Rescue
# uninitialized constant Unparser::Emitter::Repetition::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Repetition::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Repetition::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Repetition::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Repetition::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Repetition::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_THEN
# uninitialized constant Unparser::Emitter::Repetition::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Repetition::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Repetition::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_UNDEF
# uninitialized constant Unparser::Emitter::Repetition::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Repetition::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Repetition::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Repetition::K_THEN
# uninitialized constant Unparser::Emitter::Repetition::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Repetition::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Repetition::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Repetition::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Repetition::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Repetition::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::Emitter::Simple::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::UNARY_OPERATORS
#                Unparser::Emitter::UNARY_OPERATORS
# uninitialized constant Unparser::Emitter::Simple::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Simple::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Alias
#                Unparser::Emitter::Alias
# uninitialized constant Unparser::Emitter::Simple::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_END
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Simple::K_EEND
#                Unparser::Emitter::K_EEND
# uninitialized constant Unparser::Emitter::Simple::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Begin
#                Unparser::Emitter::Begin
#                Unparser::Emitter::Simple::KWBegin
#                Unparser::Emitter::KWBegin
# uninitialized constant Unparser::Emitter::Simple::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Simple::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Case
#                Unparser::Emitter::Case
#                Unparser::Emitter::Simple::K_FALSE
#                Unparser::Emitter::Simple::K_CLASS
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_CLASS
# uninitialized constant Unparser::Emitter::Simple::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Class
#                Unparser::Emitter::Class
#                Class
#                Unparser::Emitter::Simple::SClass
#                Unparser::Emitter::SClass
#                Unparser::Emitter::Simple::K_CASE
#                Unparser::Emitter::K_CASE
# uninitialized constant Unparser::Emitter::Simple::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DO
#                Unparser::Emitter::Simple::K_DO
#                Unparser::Emitter::Simple::K_SELF
#                Unparser::Emitter::K_SELF
#                Unparser::Emitter::Simple::K_UNDEF
#                Unparser::Emitter::K_UNDEF
# uninitialized constant Unparser::Emitter::Simple::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_DEFINED
#                Unparser::Emitter::Simple::K_DEFINED
# uninitialized constant Unparser::Emitter::Simple::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Defined
#                Unparser::Emitter::Simple::Defined
#                Unparser::Emitter::K_DEFINE
# uninitialized constant Unparser::Emitter::Simple::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_OR
# uninitialized constant Unparser::Emitter::Simple::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Simple::K_AND
#                Unparser::Emitter::K_END
#                Unparser::Emitter::Simple::K_END
# uninitialized constant Unparser::Emitter::Simple::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSIF
#                Unparser::Emitter::Simple::K_ELSIF
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::Simple::K_FALSE
# uninitialized constant Unparser::Emitter::Simple::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_ELSE
#                Unparser::Emitter::K_ELSE
# uninitialized constant Unparser::Emitter::Simple::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Emitter::Simple::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_AND
#                Unparser::Emitter::Simple::K_AND
#                Unparser::Emitter::K_EEND
#                Unparser::Emitter::Simple::K_EEND
# uninitialized constant Unparser::Emitter::Simple::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_END
# uninitialized constant Unparser::Emitter::Simple::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_ELSE
#                Unparser::Emitter::Simple::K_FILE
#                Unparser::Emitter::Simple::K_ELSE
#                Unparser::Emitter::Simple::K_CASE
#                Unparser::Emitter::K_CASE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Simple::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Emitter::Simple::K_NIL
#                Unparser::Emitter::K_NIL
#                Unparser::Emitter::Simple::K_WHILE
#                Unparser::Emitter::K_FALSE
#                Unparser::Emitter::K_WHILE
#                Unparser::Emitter::Simple::K_FALSE
# uninitialized constant Unparser::Emitter::Simple::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_OR
#                Unparser::Emitter::K_OR
# uninitialized constant Unparser::Emitter::Simple::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_IN
#                Unparser::Emitter::K_IN
# uninitialized constant Unparser::Emitter::Simple::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::K_IF
#                Unparser::Emitter::Simple::K_IF
# uninitialized constant Unparser::Emitter::Simple::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Module
#                Unparser::Emitter::Module
#                Module
# uninitialized constant Unparser::Emitter::Simple::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_NOT
#                Unparser::Emitter::K_NOT
# uninitialized constant Unparser::Emitter::Simple::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_IN
#                Unparser::Emitter::K_IN
#                Unparser::Emitter::Simple::K_FILE
#                Unparser::Emitter::K_FILE
#                Unparser::Emitter::Simple::K_UNTIL
#                Unparser::Emitter::K_UNTIL
# uninitialized constant Unparser::Emitter::Simple::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_NEXT
#                Unparser::Emitter::K_NEXT
# uninitialized constant Unparser::Emitter::Simple::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_FOR
#                Unparser::Emitter::K_FOR
# uninitialized constant Unparser::Emitter::Simple::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Simple::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Simple::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_DO
#                Unparser::Emitter::K_DO
# uninitialized constant Unparser::Emitter::Simple::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Rescue
#                Unparser::Emitter::Simple::Rescue
# uninitialized constant Unparser::Emitter::Simple::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_RETURN
#                Unparser::Emitter::K_RETURN
# uninitialized constant Unparser::Emitter::Simple::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_RETRY
#                Unparser::Emitter::K_RETRY
# uninitialized constant Unparser::Emitter::Simple::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Simple::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Super
#                Unparser::Emitter::Super
# uninitialized constant Unparser::Emitter::Simple::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_WHEN
#                Unparser::Emitter::K_WHEN
# uninitialized constant Unparser::Emitter::Simple::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_THEN
# uninitialized constant Unparser::Emitter::Simple::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Undef
#                Unparser::Emitter::Undef
#                Unparser::Emitter::Simple::K_DEF
#                Unparser::Emitter::K_DEF
# uninitialized constant Unparser::Emitter::Simple::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_UNDEF
# uninitialized constant Unparser::Emitter::Simple::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_NIL
#                Unparser::Emitter::K_NIL
# uninitialized constant Unparser::Emitter::Simple::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::When
#                Unparser::Emitter::Simple::When
#                Unparser::Emitter::K_THEN
#                Unparser::Emitter::Simple::K_THEN
# uninitialized constant Unparser::Emitter::Simple::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::K_FILE
#                Unparser::Emitter::K_FILE
# uninitialized constant Unparser::Emitter::Simple::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::Yield
#                Unparser::Emitter::Yield
# uninitialized constant Unparser::Emitter::Simple::NO_INDENT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Simple::REGISTRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Emitter::Simple::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Emitter::Simple::BINARY_OPERATORS
#                Unparser::Emitter::BINARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::UNARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_FALSE
# uninitialized constant Unparser::NodeDetails::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_END
#                Unparser::NodeDetails::K_EEND
# uninitialized constant Unparser::NodeDetails::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::K_CLASS
# uninitialized constant Unparser::NodeDetails::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Class
#                Unparser::NodeDetails::K_CASE
# uninitialized constant Unparser::NodeDetails::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DO
#                Unparser::NodeDetails::K_SELF
#                Unparser::NodeDetails::K_UNDEF
# uninitialized constant Unparser::NodeDetails::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DEFINED
# uninitialized constant Unparser::NodeDetails::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_OR
# uninitialized constant Unparser::NodeDetails::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_END
#                Unparser::NodeDetails::K_AND
# uninitialized constant Unparser::NodeDetails::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::K_ELSIF
# uninitialized constant Unparser::NodeDetails::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_ELSE
# uninitialized constant Unparser::NodeDetails::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::NodeDetails::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_AND
#                Unparser::NodeDetails::K_EEND
# uninitialized constant Unparser::NodeDetails::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_END
# uninitialized constant Unparser::NodeDetails::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_CASE
#                Unparser::NodeDetails::K_FILE
#                Unparser::NodeDetails::K_ELSE
# uninitialized constant Unparser::NodeDetails::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::NodeDetails::K_NIL
#                Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::K_WHILE
# uninitialized constant Unparser::NodeDetails::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_OR
# uninitialized constant Unparser::NodeDetails::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_IN
# uninitialized constant Unparser::NodeDetails::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_IF
# uninitialized constant Unparser::NodeDetails::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Module
# uninitialized constant Unparser::NodeDetails::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_NOT
# uninitialized constant Unparser::NodeDetails::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_IN
#                Unparser::NodeDetails::K_FILE
#                Unparser::NodeDetails::K_UNTIL
# uninitialized constant Unparser::NodeDetails::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_NEXT
# uninitialized constant Unparser::NodeDetails::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_FOR
# uninitialized constant Unparser::NodeDetails::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DO
# uninitialized constant Unparser::NodeDetails::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_ELSE
# uninitialized constant Unparser::NodeDetails::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_RETURN
# uninitialized constant Unparser::NodeDetails::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_RETRY
# uninitialized constant Unparser::NodeDetails::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_ENSURE
# uninitialized constant Unparser::NodeDetails::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_WHEN
# uninitialized constant Unparser::NodeDetails::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_THEN
# uninitialized constant Unparser::NodeDetails::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_UNDEF
# uninitialized constant Unparser::NodeDetails::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_NIL
# uninitialized constant Unparser::NodeDetails::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_THEN
# uninitialized constant Unparser::NodeDetails::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_FILE
# uninitialized constant Unparser::NodeDetails::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::BINARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::Send::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::UNARY_OPERATORS
#                Unparser::NodeDetails::UNARY_OPERATORS
# uninitialized constant Unparser::NodeDetails::Send::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::Send::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_FALSE
# uninitialized constant Unparser::NodeDetails::Send::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_END
#                Unparser::NodeDetails::K_END
#                Unparser::NodeDetails::Send::K_EEND
#                Unparser::NodeDetails::K_EEND
# uninitialized constant Unparser::NodeDetails::Send::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::Send::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::Send::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_FALSE
#                Unparser::NodeDetails::Send::K_CLASS
#                Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::K_CLASS
# uninitialized constant Unparser::NodeDetails::Send::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Class
#                Unparser::NodeDetails::Send::K_CASE
#                Unparser::NodeDetails::K_CASE
# uninitialized constant Unparser::NodeDetails::Send::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DO
#                Unparser::NodeDetails::Send::K_DO
#                Unparser::NodeDetails::Send::K_SELF
#                Unparser::NodeDetails::K_SELF
#                Unparser::NodeDetails::Send::K_UNDEF
#                Unparser::NodeDetails::K_UNDEF
# uninitialized constant Unparser::NodeDetails::Send::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DEFINED
#                Unparser::NodeDetails::Send::K_DEFINED
# uninitialized constant Unparser::NodeDetails::Send::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_DEFINE
# uninitialized constant Unparser::NodeDetails::Send::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_OR
# uninitialized constant Unparser::NodeDetails::Send::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_AND
#                Unparser::NodeDetails::Send::K_AND
#                Unparser::NodeDetails::K_END
#                Unparser::NodeDetails::Send::K_END
# uninitialized constant Unparser::NodeDetails::Send::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_ELSIF
#                Unparser::NodeDetails::Send::K_ELSIF
#                Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::Send::K_FALSE
# uninitialized constant Unparser::NodeDetails::Send::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_ELSE
#                Unparser::NodeDetails::K_ELSE
# uninitialized constant Unparser::NodeDetails::Send::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::NodeDetails::Send::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_AND
#                Unparser::NodeDetails::Send::K_AND
#                Unparser::NodeDetails::K_EEND
#                Unparser::NodeDetails::Send::K_EEND
# uninitialized constant Unparser::NodeDetails::Send::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_END
# uninitialized constant Unparser::NodeDetails::Send::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_ELSE
#                Unparser::NodeDetails::Send::K_FILE
#                Unparser::NodeDetails::Send::K_ELSE
#                Unparser::NodeDetails::Send::K_CASE
#                Unparser::NodeDetails::K_CASE
#                Unparser::NodeDetails::K_FILE
# uninitialized constant Unparser::NodeDetails::Send::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::NodeDetails::Send::K_NIL
#                Unparser::NodeDetails::K_NIL
#                Unparser::NodeDetails::Send::K_WHILE
#                Unparser::NodeDetails::K_FALSE
#                Unparser::NodeDetails::K_WHILE
#                Unparser::NodeDetails::Send::K_FALSE
# uninitialized constant Unparser::NodeDetails::Send::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_OR
#                Unparser::NodeDetails::K_OR
# uninitialized constant Unparser::NodeDetails::Send::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_IN
#                Unparser::NodeDetails::K_IN
# uninitialized constant Unparser::NodeDetails::Send::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::K_IF
#                Unparser::NodeDetails::Send::K_IF
# uninitialized constant Unparser::NodeDetails::Send::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Module
# uninitialized constant Unparser::NodeDetails::Send::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_NOT
#                Unparser::NodeDetails::K_NOT
# uninitialized constant Unparser::NodeDetails::Send::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_IN
#                Unparser::NodeDetails::K_IN
#                Unparser::NodeDetails::Send::K_FILE
#                Unparser::NodeDetails::K_FILE
#                Unparser::NodeDetails::Send::K_UNTIL
#                Unparser::NodeDetails::K_UNTIL
# uninitialized constant Unparser::NodeDetails::Send::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_NEXT
#                Unparser::NodeDetails::K_NEXT
# uninitialized constant Unparser::NodeDetails::Send::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_FOR
#                Unparser::NodeDetails::K_FOR
# uninitialized constant Unparser::NodeDetails::Send::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::Send::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::Send::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_DO
#                Unparser::NodeDetails::K_DO
# uninitialized constant Unparser::NodeDetails::Send::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_ELSE
# uninitialized constant Unparser::NodeDetails::Send::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_RETURN
#                Unparser::NodeDetails::K_RETURN
# uninitialized constant Unparser::NodeDetails::Send::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_RETRY
#                Unparser::NodeDetails::K_RETRY
# uninitialized constant Unparser::NodeDetails::Send::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_DEF
#                Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::Send::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_ENSURE
# uninitialized constant Unparser::NodeDetails::Send::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_WHEN
#                Unparser::NodeDetails::K_WHEN
# uninitialized constant Unparser::NodeDetails::Send::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_THEN
# uninitialized constant Unparser::NodeDetails::Send::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_DEF
#                Unparser::NodeDetails::K_DEF
# uninitialized constant Unparser::NodeDetails::Send::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_UNDEF
# uninitialized constant Unparser::NodeDetails::Send::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_NIL
#                Unparser::NodeDetails::K_NIL
# uninitialized constant Unparser::NodeDetails::Send::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_THEN
#                Unparser::NodeDetails::K_THEN
# uninitialized constant Unparser::NodeDetails::Send::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::K_FILE
#                Unparser::NodeDetails::K_FILE
# uninitialized constant Unparser::NodeDetails::Send::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::NodeDetails::Send::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::NodeDetails::Send::BINARY_OPERATORS
#                Unparser::NodeDetails::BINARY_OPERATORS
# uninitialized constant Unparser::Writer::Send::BINARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::UNARY_OPERATORS
# uninitialized constant Unparser::Writer::Send::KEYWORDS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Writer::Send::K_ALIAS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_FALSE
# uninitialized constant Unparser::Writer::Send::K_AND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_END
#                Unparser::Writer::Send::K_EEND
# uninitialized constant Unparser::Writer::Send::K_BEGIN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Writer::Send::K_BREAK
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Writer::Send::K_CASE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_FALSE
#                Unparser::Writer::Send::K_CLASS
# uninitialized constant Unparser::Writer::Send::K_CLASS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Class
#                Unparser::Writer::Send::K_CASE
# uninitialized constant Unparser::Writer::Send::K_DEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_DO
#                Unparser::Writer::Send::K_SELF
#                Unparser::Writer::Send::K_UNDEF
# uninitialized constant Unparser::Writer::Send::K_DEFINE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_DEFINED
# uninitialized constant Unparser::Writer::Send::K_DEFINED
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Writer::Send::K_DO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_OR
# uninitialized constant Unparser::Writer::Send::K_EEND
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_END
#                Unparser::Writer::Send::K_AND
# uninitialized constant Unparser::Writer::Send::K_ELSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_FALSE
#                Unparser::Writer::Send::K_ELSIF
# uninitialized constant Unparser::Writer::Send::K_ELSIF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_ELSE
# uninitialized constant Unparser::Writer::Send::K_ENCODING
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Encoding
# uninitialized constant Unparser::Writer::Send::K_END
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_AND
#                Unparser::Writer::Send::K_EEND
# uninitialized constant Unparser::Writer::Send::K_ENSURE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_END
# uninitialized constant Unparser::Writer::Send::K_FALSE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_CASE
#                Unparser::Writer::Send::K_FILE
#                Unparser::Writer::Send::K_ELSE
# uninitialized constant Unparser::Writer::Send::K_FILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  File
#                Unparser::Writer::Send::K_NIL
#                Unparser::Writer::Send::K_FALSE
#                Unparser::Writer::Send::K_WHILE
# uninitialized constant Unparser::Writer::Send::K_FOR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_OR
# uninitialized constant Unparser::Writer::Send::K_IF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_IN
# uninitialized constant Unparser::Writer::Send::K_IN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_IF
# uninitialized constant Unparser::Writer::Send::K_MODULE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Module
# uninitialized constant Unparser::Writer::Send::K_NEXT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_NOT
# uninitialized constant Unparser::Writer::Send::K_NIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_IN
#                Unparser::Writer::Send::K_FILE
#                Unparser::Writer::Send::K_UNTIL
# uninitialized constant Unparser::Writer::Send::K_NOT
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_NEXT
# uninitialized constant Unparser::Writer::Send::K_OR
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_FOR
# uninitialized constant Unparser::Writer::Send::K_POSTEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Writer::Send::K_PREEXE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Writer::Send::K_REDO
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_DO
# uninitialized constant Unparser::Writer::Send::K_RESCUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::Rescue
#                Unparser::Writer::Rescue
# uninitialized constant Unparser::Writer::Send::K_RETRY
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_RETURN
# uninitialized constant Unparser::Writer::Send::K_RETURN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_RETRY
# uninitialized constant Unparser::Writer::Send::K_SELF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_DEF
# uninitialized constant Unparser::Writer::Send::K_SUPER
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_ENSURE
# uninitialized constant Unparser::Writer::Send::K_THEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_WHEN
# uninitialized constant Unparser::Writer::Send::K_TRUE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_THEN
# uninitialized constant Unparser::Writer::Send::K_UNDEF
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_DEF
# uninitialized constant Unparser::Writer::Send::K_UNLESS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_UNDEF
# uninitialized constant Unparser::Writer::Send::K_UNTIL
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_NIL
# uninitialized constant Unparser::Writer::Send::K_WHEN
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_THEN
# uninitialized constant Unparser::Writer::Send::K_WHILE
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::K_FILE
# uninitialized constant Unparser::Writer::Send::K_YIELD
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# uninitialized constant Unparser::Writer::Send::UNARY_OPERATORS
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# Did you mean?  Unparser::Writer::Send::BINARY_OPERATORS
# uninitialized constant Vector
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant Vector
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant WeakRef
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# uninitialized constant WeakRef
# 
#       my_klass = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                       ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name zcat
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name <static-init>
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
# wrong constant name initialize
# 
#         my_value = klass.const_get(name, false) # rubocop:disable PrisonGuard/NoDynamicConstAccess
#                         ^^^^^^^^^^
